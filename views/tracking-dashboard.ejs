<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>17Track Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: bold;
        }

        .tracking-status {
            padding: 4px 8px;
            border-radius: 4px;
            color: white;
            font-size: 0.8rem;
        }

        .status-delivered {
            background-color: #28a745;
        }

        .status-transit {
            background-color: #007bff;
        }

        .status-expired {
            background-color: #dc3545;
        }

        .status-undelivered {
            background-color: #ffc107;
            color: black;
        }

        .status-alert {
            background-color: #fd7e14;
        }

        .status-unknown {
            background-color: #6c757d;
        }

        /* Inline editing styles */
        .tracking-edit-container,
        .carrier-edit-container {
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .tracking-number-edit,
        .carrier-edit {
            width: 120px;
            font-size: 0.875rem;
        }

        .edit-tracking-btn,
        .edit-carrier-btn {
            min-width: 28px;
            padding: 2px 4px;
            font-size: 0.75rem;
        }

        .tracking-number-display {
            font-family: monospace;
            background-color: #f8f9fa;
            padding: 2px 4px;
            border-radius: 3px;
        }
    </style>
</head>

<body>
    <div class="container-fluid mt-4">
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h1>üì¶ 17Track Dashboard</h1>
                    <div>
                        <a href="/purchase-orders" class="btn btn-secondary me-2">‚Üê Back to Dashboard</a>
                        <button id="updateAllBtn" class="btn btn-primary">üîÑ Update All Tracking</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Statistics Cards -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="stat-card text-center">
                    <div class="stat-number">
                        <%= stats.totalLineItems %>
                    </div>
                    <div>Total Line Items</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-card text-center">
                    <div class="stat-number">
                        <%= stats.itemsWithTracking %>
                    </div>
                    <div>With Tracking</div>
                    <small>(<%= stats.trackingCoverage %>% coverage)</small>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-card text-center">
                    <div class="stat-number">
                        <%= stats.deliveredItems %>
                    </div>
                    <div>Delivered</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-card text-center">
                    <div class="stat-number">
                        <%= stats.inTransitItems %>
                    </div>
                    <div>In Transit</div>
                </div>
            </div>
        </div>

        <!-- All Tracked Items -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">üìã All Items with Tracking (<%= stats.itemsWithTracking %>)</h5>
                        <div>
                            <button class="btn btn-sm btn-outline-primary" onclick="refreshTrackingList()">üîÑ
                                Refresh</button>
                            <button class="btn btn-sm btn-outline-secondary" onclick="toggleTrackingList()"
                                id="toggleBtn">
                                Hide List
                            </button>
                        </div>
                    </div>
                    <div class="card-body" id="trackingListContainer">
                        <div id="trackingItemsList">
                            <!-- Items will be loaded here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <!-- Recent Updates -->
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">üïí Recent Tracking Updates</h5>
                    </div>
                    <div class="card-body">
                        <% if (recentlyUpdated.length===0) { %>
                            <p class="text-muted">No recent tracking updates</p>
                            <% } else { %>
                                <div class="table-responsive">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th>PO #</th>
                                                <th>Tracking #</th>
                                                <th>Status</th>
                                                <th>Updated</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% recentlyUpdated.forEach(item=> { %>
                                                <tr>
                                                    <td>
                                                        <small>
                                                            <%= item.poNumber %>
                                                        </small><br>
                                                        <small class="text-muted">
                                                            <%= item.poId?.vendor || 'Unknown' %>
                                                        </small>
                                                    </td>
                                                    <td>
                                                        <code class="small"><%= item.trackingNumber %></code>
                                                    </td>
                                                    <td>
                                                        <span class="tracking-status <%= (function(status) {
                                                        switch(status) {
                                                            case '40': return 'status-delivered';
                                                            case '10': return 'status-transit';
                                                            case '20': return 'status-expired';
                                                            case '35': return 'status-undelivered';
                                                            case '50': return 'status-alert';
                                                            default: return 'status-unknown';
                                                        }
                                                    })(item.trackingStatus) %>">
                                                            <%= item.trackingStatusDescription || 'Unknown' %>
                                                        </span>
                                                    </td>
                                                    <td>
                                                        <small>
                                                            <%= new Date(item.trackingLastUpdate).toLocaleDateString()
                                                                %>
                                                        </small>
                                                    </td>
                                                </tr>
                                                <% }) %>
                                        </tbody>
                                    </table>
                                </div>
                                <% } %>
                    </div>
                </div>
            </div>

            <!-- Tracking Issues -->
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">‚ö†Ô∏è Tracking Issues</h5>
                    </div>
                    <div class="card-body">
                        <% if (trackingIssues.length===0) { %>
                            <p class="text-success">‚úÖ No tracking issues found</p>
                            <% } else { %>
                                <div class="table-responsive">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th>PO #</th>
                                                <th>Tracking #</th>
                                                <th>Issue</th>
                                                <th>Location</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% trackingIssues.forEach(item=> { %>
                                                <tr>
                                                    <td>
                                                        <small>
                                                            <%= item.poNumber %>
                                                        </small><br>
                                                        <small class="text-muted">
                                                            <%= item.poId?.vendor || 'Unknown' %>
                                                        </small>
                                                    </td>
                                                    <td>
                                                        <code class="small"><%= item.trackingNumber %></code>
                                                    </td>
                                                    <td>
                                                        <span class="tracking-status <%= (function(status) {
                                                        switch(status) {
                                                            case '40': return 'status-delivered';
                                                            case '10': return 'status-transit';
                                                            case '20': return 'status-expired';
                                                            case '35': return 'status-undelivered';
                                                            case '50': return 'status-alert';
                                                            default: return 'status-unknown';
                                                        }
                                                    })(item.trackingStatus) %>">
                                                            <%= item.trackingStatusDescription || 'Unknown' %>
                                                        </span>
                                                    </td>
                                                    <td>
                                                        <small>
                                                            <%= item.trackingLocation || '-' %>
                                                        </small>
                                                    </td>
                                                </tr>
                                                <% }) %>
                                        </tbody>
                                    </table>
                                </div>
                                <% } %>
                    </div>
                </div>
            </div>
        </div>

        <!-- Bulk Actions -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">üõ†Ô∏è Bulk Actions</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                <h6>Register Tracking Numbers</h6>
                                <p class="text-muted small">Register all tracking numbers with 17track for monitoring
                                </p>
                                <button id="registerAllBtn" class="btn btn-outline-primary btn-sm">Register All</button>
                            </div>
                            <div class="col-md-4">
                                <h6>Update Status</h6>
                                <p class="text-muted small">Get latest status updates for all tracked packages</p>
                                <button id="updateStatusBtn" class="btn btn-outline-success btn-sm">Update
                                    Status</button>
                            </div>
                            <div class="col-md-4">
                                <h6>Export Report</h6>
                                <p class="text-muted small">Export tracking report for analysis</p>
                                <button id="exportBtn" class="btn btn-outline-info btn-sm">Export CSV</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Status Update Modal -->
    <div class="modal fade" id="statusModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Tracking Update</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="modalMessage"></div>
                    <div class="progress" id="progressBar" style="display: none;">
                        <div class="progress-bar" role="progressbar" style="width: 0%"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function getStatusClass(status) {
            switch (status) {
                case '40': return 'status-delivered';
                case '10': return 'status-transit';
                case '20': return 'status-expired';
                case '35': return 'status-undelivered';
                case '50': return 'status-alert';
                default: return 'status-unknown';
            }
        }

        const statusModal = new bootstrap.Modal(document.getElementById('statusModal'));

        function showModal(title, message, showProgress = false) {
            document.querySelector('#statusModal .modal-title').textContent = title;
            document.getElementById('modalMessage').innerHTML = message;
            document.getElementById('progressBar').style.display = showProgress ? 'block' : 'none';
            statusModal.show();
        }

        // Update all tracking
        document.getElementById('updateAllBtn').addEventListener('click', async () => {
            showModal('Updating Tracking...', 'Fetching latest tracking information...', true);

            try {
                const response = await fetch('/purchase-orders/tracking/update-all', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });

                const result = await response.json();

                if (result.success) {
                    showModal('Update Complete', `
                        <div class="alert alert-success">
                            <strong>Success!</strong> ${result.message}
                            <br><small>Total tracked: ${result.totalTracked}, Updated: ${result.updated}</small>
                        </div>
                    `);
                    setTimeout(() => location.reload(), 3000);
                } else {
                    throw new Error(result.error || 'Update failed');
                }
            } catch (error) {
                showModal('Update Failed', `
                    <div class="alert alert-danger">
                        <strong>Error:</strong> ${error.message}
                    </div>
                `);
            }
        });

        // Register all tracking numbers
        document.getElementById('registerAllBtn').addEventListener('click', async () => {
            showModal('Registering...', 'Registering tracking numbers with 17track...', true);

            try {
                // First get all tracking numbers
                const lineItemsResponse = await fetch('/purchase-orders/line-items-api?limit=1000');
                const lineItemsData = await lineItemsResponse.json();

                const trackingNumbers = lineItemsData.lineItems
                    .filter(item => item.trackingNumber)
                    .map(item => ({
                        number: item.trackingNumber,
                        carrier: item.trackingCarrier
                    }));

                if (trackingNumbers.length === 0) {
                    showModal('No Tracking Numbers', 'No tracking numbers found to register.');
                    return;
                }

                const response = await fetch('/purchase-orders/tracking/register', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ trackingNumbers })
                });

                const result = await response.json();

                if (result.success) {
                    showModal('Registration Complete', `
                        <div class="alert alert-success">
                            <strong>Success!</strong> ${result.message}
                        </div>
                    `);
                } else {
                    throw new Error(result.error || 'Registration failed');
                }
            } catch (error) {
                showModal('Registration Failed', `
                    <div class="alert alert-danger">
                        <strong>Error:</strong> ${error.message}
                    </div>
                `);
            }
        });

        // Export functionality
        document.getElementById('exportBtn').addEventListener('click', () => {
            showModal('Export Coming Soon', 'CSV export functionality will be implemented soon.');
        });

        // Load tracking items list
        async function loadTrackingList() {
            const container = document.getElementById('trackingItemsList');
            container.innerHTML = '<div class="text-center p-3"><div class="spinner-border" role="status"></div><br>Loading tracking data...</div>';

            try {
                const response = await fetch('/purchase-orders/line-items-api?limit=1000');
                const data = await response.json();

                const itemsWithTracking = data.lineItems.filter(item => item.trackingNumber);

                if (itemsWithTracking.length === 0) {
                    container.innerHTML = '<div class="text-center p-3 text-muted">No items with tracking numbers found.</div>';
                    return;
                }

                // Group by PO for better organization
                const itemsByPO = {};
                itemsWithTracking.forEach(item => {
                    if (!itemsByPO[item.poNumber]) {
                        itemsByPO[item.poNumber] = [];
                    }
                    itemsByPO[item.poNumber].push(item);
                });

                let html = '<div class="table-responsive">';
                html += '<table class="table table-sm table-striped">';
                html += '<thead class="table-dark">';
                html += '<tr>';
                html += '<th>PO Number</th>';
                html += '<th>Item</th>';
                html += '<th>Tracking Number</th>';
                html += '<th>Carrier</th>';
                html += '<th>Status</th>';
                html += '<th>Location</th>';
                html += '<th>Last Update</th>';
                html += '<th>Actions</th>';
                html += '</tr>';
                html += '</thead>';
                html += '<tbody>';

                Object.keys(itemsByPO).sort().forEach(poNumber => {
                    itemsByPO[poNumber].forEach((item, index) => {
                        const isFirstItem = index === 0;
                        const rowspan = isFirstItem ? itemsByPO[poNumber].length : 0;

                        html += '<tr>';

                        if (isFirstItem) {
                            html += `<td rowspan="${rowspan}" class="align-middle bg-light">`;
                            html += `<strong>${poNumber}</strong><br>`;
                            html += `<small class="text-muted">${item.poId?.vendor || 'Unknown Vendor'}</small>`;
                            html += `</td>`;
                        }

                        html += `<td>`;
                        html += `<div class="small">${item.memo || 'No description'}</div>`;
                        if (item.sku) {
                            html += `<small class="text-muted">SKU: ${item.sku}</small>`;
                        }
                        html += `</td>`;

                        html += `<td>`;
                        html += `<div class="tracking-edit-container" data-item-id="${item._id}">`;
                        html += `<code class="small tracking-number-display">${item.trackingNumber}</code>`;
                        html += `<input type="text" class="form-control form-control-sm tracking-number-edit" `;
                        html += `value="${item.trackingNumber}" style="display: none;">`;
                        html += `<button class="btn btn-sm btn-outline-secondary ms-1 edit-tracking-btn" `;
                        html += `onclick="editTracking('${item._id}', 'trackingNumber')">‚úèÔ∏è</button>`;
                        html += `</div>`;
                        html += `</td>`;

                        html += `<td>`;
                        html += `<div class="carrier-edit-container" data-item-id="${item._id}">`;
                        html += `<span class="badge bg-secondary carrier-display">${item.trackingCarrier || 'Unknown'}</span>`;
                        html += `<select class="form-control form-control-sm carrier-edit" style="display: none;">`;
                        html += `<option value="FedEx" ${item.trackingCarrier === 'FedEx' ? 'selected' : ''}>FedEx</option>`;
                        html += `<option value="UPS" ${item.trackingCarrier === 'UPS' ? 'selected' : ''}>UPS</option>`;
                        html += `<option value="USPS" ${item.trackingCarrier === 'USPS' ? 'selected' : ''}>USPS</option>`;
                        html += `<option value="DHL" ${item.trackingCarrier === 'DHL' ? 'selected' : ''}>DHL</option>`;
                        html += `<option value="Amazon" ${item.trackingCarrier === 'Amazon' ? 'selected' : ''}>Amazon</option>`;
                        html += `<option value="OnTrac" ${item.trackingCarrier === 'OnTrac' ? 'selected' : ''}>OnTrac</option>`;
                        html += `<option value="LaserShip" ${item.trackingCarrier === 'LaserShip' ? 'selected' : ''}>LaserShip</option>`;
                        html += `<option value="Canada Post" ${item.trackingCarrier === 'Canada Post' ? 'selected' : ''}>Canada Post</option>`;
                        html += `<option value="Other" ${item.trackingCarrier === 'Other' ? 'selected' : ''}>Other</option>`;
                        html += `</select>`;
                        html += `<button class="btn btn-sm btn-outline-secondary ms-1 edit-carrier-btn" `;
                        html += `onclick="editTracking('${item._id}', 'carrier')">‚úèÔ∏è</button>`;
                        html += `</div>`;
                        html += `</td>`;

                        html += `<td>`;
                        const statusClass = getTrackingStatusClass(item.trackingStatus);
                        html += `<span class="tracking-status ${statusClass}">`;
                        html += `${item.trackingStatusDescription || 'Unknown'}`;
                        html += `</span>`;
                        html += `</td>`;

                        html += `<td><small>${item.trackingLocation || '-'}</small></td>`;

                        html += `<td>`;
                        if (item.trackingLastUpdate) {
                            html += `<small>${new Date(item.trackingLastUpdate).toLocaleDateString()}</small>`;
                        } else {
                            html += `<small class="text-muted">Never</small>`;
                        }
                        html += `</td>`;

                        html += `<td>`;
                        html += `<button class="btn btn-sm btn-outline-primary" onclick="updateSingleTracking('${item._id}')">`;
                        html += `üîÑ Update`;
                        html += `</button>`;
                        html += `</td>`;

                        html += '</tr>';
                    });
                });

                html += '</tbody></table></div>';
                container.innerHTML = html;

            } catch (error) {
                console.error('Error loading tracking list:', error);
                container.innerHTML = '<div class="alert alert-danger">Error loading tracking data</div>';
            }
        }

        function getTrackingStatusClass(status) {
            switch (status) {
                case '40': return 'status-delivered';
                case '10': return 'status-transit';
                case '20': return 'status-expired';
                case '35': return 'status-undelivered';
                case '50': return 'status-alert';
                default: return 'status-unknown';
            }
        }

        // Update single tracking
        async function updateSingleTracking(itemId) {
            const button = event.target;
            const originalText = button.innerHTML;
            button.disabled = true;
            button.innerHTML = '‚è≥ Updating...';

            try {
                const response = await fetch(`/purchase-orders/line-items/${itemId}/tracking/update`, {
                    method: 'PUT'
                });

                const result = await response.json();

                if (result.success) {
                    // Refresh the list to show updated data
                    await loadTrackingList();
                } else {
                    alert('No tracking information found for this item');
                }
            } catch (error) {
                console.error('Error updating tracking:', error);
                alert('Error updating tracking information');
            } finally {
                button.disabled = false;
                button.innerHTML = originalText;
            }
        }

        // Refresh tracking list
        function refreshTrackingList() {
            loadTrackingList();
        }

        // Toggle tracking list visibility
        let listVisible = true;
        function toggleTrackingList() {
            const container = document.getElementById('trackingListContainer');
            const button = document.getElementById('toggleBtn');

            if (listVisible) {
                container.style.display = 'none';
                button.textContent = 'Show List';
                listVisible = false;
            } else {
                container.style.display = 'block';
                button.textContent = 'Hide List';
                listVisible = true;
            }
        }

        // Edit tracking number or carrier
        function editTracking(itemId, field) {
            const container = document.querySelector(`[data-item-id="${itemId}"]`);

            if (field === 'trackingNumber') {
                const display = container.querySelector('.tracking-number-display');
                const input = container.querySelector('.tracking-number-edit');
                const button = container.querySelector('.edit-tracking-btn');

                if (input.style.display === 'none') {
                    // Switch to edit mode
                    display.style.display = 'none';
                    input.style.display = 'inline-block';
                    button.textContent = 'üíæ';
                    button.onclick = () => saveTracking(itemId, field);
                    input.focus();
                    input.select();
                } else {
                    // Cancel edit
                    display.style.display = 'inline';
                    input.style.display = 'none';
                    button.textContent = '‚úèÔ∏è';
                    button.onclick = () => editTracking(itemId, field);
                    input.value = display.textContent; // Reset value
                }
            } else if (field === 'carrier') {
                const container = document.querySelector(`.carrier-edit-container[data-item-id="${itemId}"]`);
                const display = container.querySelector('.carrier-display');
                const select = container.querySelector('.carrier-edit');
                const button = container.querySelector('.edit-carrier-btn');

                if (select.style.display === 'none') {
                    // Switch to edit mode
                    display.style.display = 'none';
                    select.style.display = 'inline-block';
                    button.textContent = 'üíæ';
                    button.onclick = () => saveTracking(itemId, field);
                    select.focus();
                } else {
                    // Cancel edit
                    display.style.display = 'inline';
                    select.style.display = 'none';
                    button.textContent = '‚úèÔ∏è';
                    button.onclick = () => editTracking(itemId, field);
                }
            }
        }

        // Save tracking changes
        async function saveTracking(itemId, field) {
            const trackingContainer = document.querySelector(`[data-item-id="${itemId}"]`);
            const carrierContainer = document.querySelector(`.carrier-edit-container[data-item-id="${itemId}"]`);

            let newValue, displayElement, inputElement, button;

            if (field === 'trackingNumber') {
                displayElement = trackingContainer.querySelector('.tracking-number-display');
                inputElement = trackingContainer.querySelector('.tracking-number-edit');
                button = trackingContainer.querySelector('.edit-tracking-btn');
                newValue = inputElement.value.trim();

                if (!newValue) {
                    alert('Tracking number cannot be empty');
                    return;
                }
            } else if (field === 'carrier') {
                displayElement = carrierContainer.querySelector('.carrier-display');
                inputElement = carrierContainer.querySelector('.carrier-edit');
                button = carrierContainer.querySelector('.edit-carrier-btn');
                newValue = inputElement.value;
            }

            // Disable button during save
            button.disabled = true;
            button.textContent = '‚è≥';

            try {
                // Get current values for both fields
                const currentTrackingNumber = trackingContainer.querySelector('.tracking-number-display').textContent;
                const currentCarrier = carrierContainer.querySelector('.carrier-display').textContent;

                // Prepare request body with both values (update the one being changed)
                const requestBody = {
                    trackingNumber: field === 'trackingNumber' ? newValue : currentTrackingNumber,
                    carrier: field === 'carrier' ? newValue : currentCarrier
                };

                const response = await fetch(`/purchase-orders/line-items/${itemId}/tracking`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(requestBody)
                });

                const result = await response.json();

                if (response.ok) {
                    // Update display
                    if (field === 'trackingNumber') {
                        displayElement.textContent = newValue;
                        displayElement.style.display = 'inline';
                        inputElement.style.display = 'none';
                        button.textContent = '‚úèÔ∏è';
                        button.onclick = () => editTracking(itemId, field);
                    } else if (field === 'carrier') {
                        displayElement.textContent = newValue;
                        displayElement.style.display = 'inline';
                        inputElement.style.display = 'none';
                        button.textContent = '‚úèÔ∏è';
                        button.onclick = () => editTracking(itemId, field);
                    }

                    // Show success message
                    showModal('Success', `
                        <div class="alert alert-success">
                            ${field === 'trackingNumber' ? 'Tracking number' : 'Carrier'} updated successfully!
                        </div>
                    `);

                } else {
                    throw new Error(result.error || 'Failed to update');
                }
            } catch (error) {
                console.error('Error saving tracking:', error);
                alert(`Error updating ${field}: ${error.message}`);
            } finally {
                button.disabled = false;
                if (button.textContent === '‚è≥') {
                    button.textContent = 'üíæ';
                }
            }
        }

        // Handle keyboard events for editing
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                // Cancel any active edits
                document.querySelectorAll('.tracking-number-edit[style*="inline-block"], .carrier-edit[style*="inline-block"]').forEach(input => {
                    const itemId = input.closest('[data-item-id]').dataset.itemId;
                    const field = input.classList.contains('tracking-number-edit') ? 'trackingNumber' : 'carrier';
                    editTracking(itemId, field); // This will cancel the edit
                });
            } else if (e.key === 'Enter' && e.target.classList.contains('tracking-number-edit')) {
                // Save on Enter for tracking number inputs
                const itemId = e.target.closest('[data-item-id]').dataset.itemId;
                saveTracking(itemId, 'trackingNumber');
            }
        });

        // Load tracking list when page loads
        document.addEventListener('DOMContentLoaded', () => {
            loadTrackingList();
        });
    </script>
</body>

</html>