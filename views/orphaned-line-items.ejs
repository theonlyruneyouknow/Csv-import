<!DOCTYPE html>
<html>

<head>
    <title>Orphaned Line Items Manager</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .header h1 {
            margin: 0;
            color: #dc3545;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .header h1::before {
            content: "üßπ";
            font-size: 1.2em;
        }

        .nav-links {
            display: flex;
            gap: 15px;
        }

        .nav-links a {
            padding: 8px 16px;
            text-decoration: none;
            background: #6c757d;
            color: white;
            border-radius: 4px;
            font-size: 14px;
        }

        .nav-links a:hover {
            background: #5a6268;
        }

        /* Stats Section */
        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }

        .stat-card {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        .stat-number {
            font-size: 2em;
            font-weight: bold;
            margin-bottom: 5px;
            color: #dc3545;
        }

        .stat-label {
            color: #6c757d;
            font-size: 0.9em;
        }

        /* Info Section */
        .info-section {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
        }

        .info-section h3 {
            margin-top: 0;
            color: #856404;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .info-section h3::before {
            content: "‚ÑπÔ∏è";
        }

        .info-section ul {
            margin-bottom: 0;
            color: #856404;
        }

        /* Actions Section */
        .actions-section {
            background: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .actions-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 15px;
            margin-bottom: 15px;
        }

        .action-button {
            padding: 12px 20px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            transition: all 0.2s;
        }

        .btn-archive {
            background: #ffc107;
            color: #000;
        }

        .btn-delete {
            background: #dc3545;
            color: white;
        }

        .btn-export {
            background: #17a2b8;
            color: white;
        }

        .btn-fix {
            background: #28a745;
            color: white;
        }

        .btn-select-all {
            background: #6c757d;
            color: white;
        }

        .action-button:hover {
            opacity: 0.9;
            transform: translateY(-1px);
        }

        /* PO Groups */
        .po-groups {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .po-group {
            border-bottom: 1px solid #eee;
        }

        .po-group:last-child {
            border-bottom: none;
        }

        .po-header {
            background: #f8f9fa;
            padding: 15px 20px;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: background 0.2s;
        }

        .po-header:hover {
            background: #e9ecef;
        }

        .po-header.expanded {
            background: #e3f2fd;
        }

        .po-info {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .po-number {
            font-weight: bold;
            font-size: 16px;
            color: #007bff;
        }

        .po-details {
            font-size: 14px;
            color: #6c757d;
        }

        .toggle-indicator {
            font-size: 18px;
            transition: transform 0.2s;
        }

        .toggle-indicator.expanded {
            transform: rotate(90deg);
        }

        .po-items {
            display: none;
            padding: 0;
        }

        .po-items.expanded {
            display: block;
        }

        .item-row {
            padding: 15px 20px;
            border-bottom: 1px solid #f0f0f0;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .item-row:last-child {
            border-bottom: none;
        }

        .item-checkbox {
            margin: 0;
        }

        .item-details {
            flex: 1;
        }

        .item-memo {
            font-weight: bold;
            margin-bottom: 5px;
        }

        .item-meta {
            font-size: 13px;
            color: #6c757d;
        }

        .issue-badge {
            padding: 3px 8px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: bold;
        }

        .badge-no-po {
            background: #f8d7da;
            color: #721c24;
        }

        .badge-no-vendor {
            background: #fff3cd;
            color: #856404;
        }

        .badge-no-status {
            background: #e2e3e5;
            color: #383d41;
        }

        .no-orphans {
            text-align: center;
            padding: 60px 20px;
            color: #28a745;
            font-size: 18px;
        }

        .no-orphans::before {
            content: "‚úÖ";
            font-size: 48px;
            display: block;
            margin-bottom: 15px;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="header">
            <h1>Orphaned Line Items Manager</h1>
            <div class="nav-links">
                <a href="/purchase-orders">‚Üê Back to Dashboard</a>
                <a href="/purchase-orders/line-items-manager">Line Items Manager</a>
                <a href="/purchase-orders/trouble-seed">Trouble Seed</a>
            </div>
        </div>

        <!-- Stats Section -->
        <div class="stats">
            <div class="stat-card">
                <div class="stat-number">
                    <%= stats.totalOrphanedItems %>
                </div>
                <div class="stat-label">Total Orphaned Items</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">
                    <%= stats.totalOrphanedPOs %>
                </div>
                <div class="stat-label">POs with Issues</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">
                    <%= stats.itemsWithoutPO %>
                </div>
                <div class="stat-label">Items without PO</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">
                    <%= stats.itemsWithMissingVendor %>
                </div>
                <div class="stat-label">Missing Vendor</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">
                    <%= stats.itemsWithNoStatus %>
                </div>
                <div class="stat-label">No Status Data</div>
            </div>
        </div>

        <!-- Info Section -->
        <div class="info-section">
            <h3>What are Orphaned Line Items?</h3>
            <ul>
                <li><strong>Missing PO:</strong> Line items that reference non-existent purchase orders</li>
                <li><strong>Missing Vendor:</strong> POs with null, empty, or "N/A" vendor information</li>
                <li><strong>No Status:</strong> POs with no status or NS status data, making them invisible in
                    dashboards</li>
            </ul>
            <p><strong>Impact:</strong> These items cannot be managed through the normal PO dashboard interface and need
                to be cleaned up.</p>
        </div>

        <% if (orphanedByPO.length===0) { %>
            <div class="no-orphans">
                No orphaned line items found!<br>
                <small>All line items have proper PO associations.</small>
            </div>
            <% } else { %>
                <!-- Actions Section -->
                <div class="actions-section">
                    <h3>Data Preservation & Recovery Actions</h3>
                    <div class="actions-grid">
                        <button class="action-button btn-export" onclick="exportData()">üìä Export to CSV</button>
                        <button class="action-button btn-fix" onclick="showFixModal()">üîß Fix & Recover Data</button>
                        <button class="action-button btn-select-all" onclick="selectAll()">Select All Items</button>
                        <button class="action-button btn-archive" onclick="archiveSelected()">üì¶ Archive
                            Selected</button>
                        <button class="action-button btn-delete" onclick="deleteSelected()">üóëÔ∏è Delete Selected</button>
                    </div>
                    <p id="selectedCount" style="margin: 0; color: #6c757d;">0 items selected</p>
                </div>

                <!-- PO Groups -->
                <div class="po-groups">
                    <% orphanedByPO.forEach((poGroup, index)=> { %>
                        <div class="po-group">
                            <div class="po-header" onclick="togglePO(<%= index %>)">
                                <div class="po-info">
                                    <div class="po-number">
                                        <%= poGroup.poNumber %>
                                    </div>
                                    <div class="po-details">
                                        Vendor: <%= poGroup.vendor %> |
                                            Status: <%= poGroup.poStatus %> |
                                                NS Status: <%= poGroup.poNsStatus %> |
                                                    <%= poGroup.items.length %> item(s)
                                                        <% if (!poGroup.poExists) { %>
                                                            <span class="issue-badge badge-no-po">NO PO</span>
                                                            <% } else if (poGroup.vendor==='N/A' ) { %>
                                                                <span class="issue-badge badge-no-vendor">NO
                                                                    VENDOR</span>
                                                                <% } else { %>
                                                                    <span class="issue-badge badge-no-status">NO
                                                                        STATUS</span>
                                                                    <% } %>
                                    </div>
                                </div>
                                <div class="toggle-indicator" id="toggle-<%= index %>">‚ñ∂</div>
                            </div>
                            <div class="po-items" id="items-<%= index %>">
                                <% poGroup.items.forEach(item=> { %>
                                    <div class="item-row">
                                        <input type="checkbox" class="item-checkbox" value="<%= item._id %>"
                                            onchange="updateSelectedCount()">
                                        <div class="item-details">
                                            <div class="item-memo">
                                                <%= item.memo %>
                                            </div>
                                            <div class="item-meta">
                                                <% if (item.sku) { %>SKU: <%= item.sku %> | <% } %>
                                                            <% if (item.itemStatus) { %>Status: <%= item.itemStatus %> |
                                                                    <% } %>
                                                                        Received: <%= item.received ? 'Yes' : 'No' %> |
                                                                            Date: <%= item.date ? new
                                                                                Date(item.date).toLocaleDateString()
                                                                                : 'N/A' %>
                                            </div>
                                        </div>
                                    </div>
                                    <% }); %>
                            </div>
                        </div>
                        <% }); %>
                </div>
                <% } %>
    </div>

    <!-- Fix Modal -->
    <div id="fixModal"
        style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000;">
        <div
            style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background: white; padding: 30px; border-radius: 8px; min-width: 400px;">
            <h3 style="margin-top: 0;">Fix Orphaned Line Items</h3>
            <p>Choose how to recover the selected line items:</p>

            <div style="margin-bottom: 20px;">
                <input type="radio" id="createPO" name="fixAction" value="create" checked>
                <label for="createPO" style="margin-left: 8px;">Create New Purchase Order</label>
            </div>

            <div style="margin-bottom: 20px;">
                <input type="radio" id="linkPO" name="fixAction" value="link">
                <label for="linkPO" style="margin-left: 8px;">Link to Existing Purchase Order</label>
            </div>

            <div style="margin-bottom: 15px;">
                <label for="poNumberInput" style="display: block; margin-bottom: 5px; font-weight: bold;">PO
                    Number:</label>
                <input type="text" id="poNumberInput"
                    style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px;"
                    placeholder="Enter PO number">
            </div>

            <div id="vendorSection" style="margin-bottom: 20px;">
                <label for="vendorInput" style="display: block; margin-bottom: 5px; font-weight: bold;">Vendor
                    Name:</label>
                <input type="text" id="vendorInput"
                    style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px;"
                    placeholder="Enter vendor name">

                <label for="statusSelect"
                    style="display: block; margin-bottom: 5px; margin-top: 15px; font-weight: bold;">PO Status:</label>
                <select id="statusSelect"
                    style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px;">
                    <option value="">-- Select Status --</option>
                    <option value="Planning">Planning</option>
                    <option value="Approved for Purchase">Approved for Purchase</option>
                    <option value="Pending Approval">Pending Approval</option>
                    <option value="On Hold">On Hold</option>
                    <option value="Ready to Order">Ready to Order</option>
                    <option value="Open">Open</option>
                    <option value="Cancelled">Cancelled</option>
                </select>
            </div>

            <div style="display: flex; gap: 10px; justify-content: flex-end;">
                <button onclick="closeFix()"
                    style="padding: 8px 16px; border: 1px solid #ddd; background: white; border-radius: 4px; cursor: pointer;">Cancel</button>
                <button onclick="executeFix()"
                    style="padding: 8px 16px; border: none; background: #28a745; color: white; border-radius: 4px; cursor: pointer;">Fix
                    Items</button>
            </div>
        </div>
    </div>

    <script>
        function togglePO(index) {
            const toggle = document.getElementById(`toggle-${index}`);
            const items = document.getElementById(`items-${index}`);
            const header = toggle.closest('.po-header');

            if (items.classList.contains('expanded')) {
                items.classList.remove('expanded');
                toggle.classList.remove('expanded');
                header.classList.remove('expanded');
            } else {
                items.classList.add('expanded');
                toggle.classList.add('expanded');
                header.classList.add('expanded');
            }
        }

        function selectAll() {
            const checkboxes = document.querySelectorAll('.item-checkbox');
            const allChecked = Array.from(checkboxes).every(cb => cb.checked);

            checkboxes.forEach(cb => {
                cb.checked = !allChecked;
            });

            updateSelectedCount();
        }

        function updateSelectedCount() {
            const selected = document.querySelectorAll('.item-checkbox:checked').length;
            document.getElementById('selectedCount').textContent = `${selected} items selected`;
        }

        function getSelectedItems() {
            return Array.from(document.querySelectorAll('.item-checkbox:checked'))
                .map(cb => cb.value);
        }

        async function archiveSelected() {
            const selectedIds = getSelectedItems();
            if (selectedIds.length === 0) {
                alert('Please select items to archive');
                return;
            }

            if (!confirm(`Are you sure you want to archive ${selectedIds.length} items? They will be hidden from normal views but not deleted.`)) {
                return;
            }

            try {
                const response = await fetch('/purchase-orders/archive-orphaned-items', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ itemIds: selectedIds, action: 'archive' })
                });

                const result = await response.json();
                if (result.success) {
                    alert(result.message);
                    location.reload();
                } else {
                    alert('Error: ' + result.error);
                }
            } catch (error) {
                alert('Error archiving items: ' + error.message);
            }
        }

        async function deleteSelected() {
            const selectedIds = getSelectedItems();
            if (selectedIds.length === 0) {
                alert('Please select items to delete');
                return;
            }

            if (!confirm(`‚ö†Ô∏è WARNING: Are you sure you want to PERMANENTLY DELETE ${selectedIds.length} items? This action cannot be undone!`)) {
                return;
            }

            if (!confirm('This will permanently remove the selected line items from the database. Are you absolutely sure?')) {
                return;
            }

            try {
                const response = await fetch('/purchase-orders/archive-orphaned-items', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ itemIds: selectedIds, action: 'delete' })
                });

                const result = await response.json();
                if (result.success) {
                    alert(result.message);
                    location.reload();
                } else {
                    alert('Error: ' + result.error);
                }
            } catch (error) {
                alert('Error deleting items: ' + error.message);
            }
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', () => {
            updateSelectedCount();

            // Show/hide vendor section based on radio selection
            document.getElementById('createPO').addEventListener('change', () => {
                document.getElementById('vendorSection').style.display = 'block';
            });

            document.getElementById('linkPO').addEventListener('change', () => {
                document.getElementById('vendorSection').style.display = 'none';
            });
        });

        // New functions for data preservation
        function exportData() {
            window.open('/purchase-orders/export-orphaned-items', '_blank');
        }

        function showFixModal() {
            const selectedIds = getSelectedItems();
            if (selectedIds.length === 0) {
                alert('Please select items to fix');
                return;
            }

            document.getElementById('fixModal').style.display = 'block';
        }

        function closeFix() {
            document.getElementById('fixModal').style.display = 'none';
            // Reset form
            document.getElementById('createPO').checked = true;
            document.getElementById('poNumberInput').value = '';
            document.getElementById('vendorInput').value = '';
            document.getElementById('statusSelect').value = '';
            document.getElementById('vendorSection').style.display = 'block';
        }

        async function executeFix() {
            const selectedIds = getSelectedItems();
            const action = document.getElementById('createPO').checked ? 'create-po' : 'link-existing';
            const poNumber = document.getElementById('poNumberInput').value.trim();
            const vendor = document.getElementById('vendorInput').value.trim();
            const status = document.getElementById('statusSelect').value.trim();

            if (!poNumber) {
                alert('Please enter a PO number');
                return;
            }

            if (action === 'create-po') {
                if (!vendor) {
                    alert('Please enter a vendor name for the new PO');
                    return;
                }
                if (!status) {
                    alert('Please select a status for the new PO');
                    return;
                }
            }

            try {
                const response = await fetch('/purchase-orders/fix-orphaned-items', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        poNumber,
                        action,
                        vendor,
                        status,
                        itemIds: selectedIds
                    })
                });

                const result = await response.json();
                if (result.success) {
                    alert(result.message);
                    closeFix();
                    location.reload();
                } else {
                    alert('Error: ' + result.error);
                }
            } catch (error) {
                alert('Error fixing items: ' + error.message);
            }
        }
    </script>
</body>

</html>