<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enhanced Trouble Seed Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background: #f8f9fa;
        }

        /* Navigation Styles */
        .container {
            max-width: 1400px;
            margin: 0 auto;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            position: sticky;
            top: 0;
            background: white;
            z-index: 1000;
            padding: 15px 0;
            border-bottom: 1px solid #dee2e6;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            flex-wrap: wrap;
            gap: 15px;
        }

        .header h1 {
            margin: 0;
            flex-shrink: 0;
            color: #007bff;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        /* P.O.D. Button Styles */
        .pod-button {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 6px;
            text-decoration: none;
            font-size: 14px;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            white-space: nowrap;
        }

        .pod-button:hover {
            background: linear-gradient(135deg, #218838, #1ea583);
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
            color: white;
            text-decoration: none;
        }

        .pod-button .arrow {
            font-size: 12px;
            transition: transform 0.3s ease;
        }

        .pod-button:hover .arrow {
            transform: translateX(-2px);
        }

        /* Dashboard Content Styles */

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            border-radius: 12px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
            border-left: 4px solid #dc3545;
            transition: transform 0.2s ease;
        }

        .stat-card:hover {
            transform: translateY(-2px);
        }

        .stat-card.no-eta {
            border-left-color: #6c757d;
        }

        .stat-card.approaching-soon {
            border-left-color: #ff6b35;
        }

        .stat-card.approaching {
            border-left-color: #ffc107;
        }

        .stat-card.overdue {
            border-left-color: #dc3545;
        }

        .stat-card.needs-followup {
            border-left-color: #9c27b0;
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: 700;
            color: #333;
            line-height: 1;
        }

        .stat-label {
            font-size: 0.9rem;
            color: #666;
            margin-top: 5px;
        }

        .filters-section {
            background: white;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 30px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
        }

        .category-tabs {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 20px;
        }

        .category-tab {
            padding: 10px 20px;
            border: 2px solid #dee2e6;
            border-radius: 25px;
            background: white;
            color: #666;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
            position: relative;
        }

        .category-tab:hover {
            border-color: #dc3545;
            color: #dc3545;
            text-decoration: none;
        }

        .category-tab.active {
            background: #dc3545;
            border-color: #dc3545;
            color: white;
        }

        .tab-badge {
            background: rgba(255, 255, 255, 0.2);
            padding: 2px 8px;
            border-radius: 10px;
            font-size: 0.8rem;
            margin-left: 8px;
        }

        .tab-badge.active {
            background: rgba(255, 255, 255, 0.3);
        }

        .po-section {
            background: white;
            border-radius: 12px;
            margin-bottom: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
            overflow: hidden;
        }

        .po-header {
            background: #f8f9fa;
            padding: 20px;
            border-bottom: 1px solid #dee2e6;
            display: flex;
            justify-content: between;
            align-items: center;
            flex-wrap: wrap;
            gap: 15px;
        }

        .po-info h3 {
            margin: 0;
            color: #333;
            font-size: 1.3rem;
        }

        .vendor-info {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 5px;
        }

        .vendor-contact-btn {
            background: #28a745;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 0.8rem;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 5px;
        }

        .items-list {
            padding: 0;
            margin: 0;
        }

        .item-row {
            display: flex;
            align-items: center;
            padding: 15px 20px;
            border-bottom: 1px solid #f1f3f4;
            transition: background-color 0.2s ease;
        }

        .item-row:hover {
            background: #f8f9fa;
        }

        .item-row:last-child {
            border-bottom: none;
        }

        .item-info {
            flex: 1;
        }

        .item-memo {
            font-weight: 600;
            color: #333;
            margin-bottom: 5px;
        }

        .item-details {
            font-size: 0.9rem;
            color: #666;
        }

        .eta-info {
            text-align: right;
            min-width: 150px;
        }

        .eta-date {
            font-weight: 600;
            margin-bottom: 2px;
        }

        .eta-status {
            font-size: 0.8rem;
            padding: 2px 8px;
            border-radius: 10px;
            font-weight: 500;
        }

        .eta-status.no-eta {
            background: #6c757d;
            color: white;
        }

        .eta-status.approaching-soon {
            background: #ff6b35;
            color: white;
        }

        .eta-status.approaching {
            background: #ffc107;
            color: #333;
        }

        .eta-status.overdue {
            background: #dc3545;
            color: white;
        }

        .eta-status.future {
            background: #28a745;
            color: white;
        }

        .item-actions {
            display: flex;
            gap: 5px;
            margin-left: 15px;
        }

        .action-btn {
            padding: 5px 10px;
            border: none;
            border-radius: 5px;
            font-size: 0.8rem;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .btn-update-eta {
            background: #007bff;
            color: white;
        }

        .btn-contact-vendor {
            background: #28a745;
            color: white;
        }

        .btn-mark-received {
            background: #6f42c1;
            color: white;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

        .empty-state i {
            font-size: 4rem;
            margin-bottom: 20px;
            opacity: 0.3;
        }

        .back-nav {
            margin-bottom: 20px;
        }

        .back-nav a {
            color: #666;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            font-weight: 500;
            transition: color 0.2s ease;
        }

        .back-nav a:hover {
            color: #dc3545;
        }

        @media (max-width: 768px) {
            .category-tabs {
                flex-direction: column;
            }

            .category-tab {
                text-align: center;
            }

            .po-header {
                flex-direction: column;
                align-items: stretch;
            }

            .item-row {
                flex-direction: column;
                align-items: stretch;
                gap: 10px;
            }

            .eta-info {
                text-align: left;
            }

            .item-actions {
                margin-left: 0;
                justify-content: flex-start;
            }
        }

        /* Email Generator Styles */
        .email-generator {
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
            margin-bottom: 30px;
            overflow: hidden;
        }

        .email-generator-header {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
            padding: 20px;
            border-bottom: 1px solid #dee2e6;
        }

        .email-generator-header h4 {
            margin: 0;
            font-size: 1.3rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .email-content {
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 20px;
            font-family: 'Courier New', monospace;
            font-size: 14px;
            line-height: 1.6;
            white-space: pre-wrap;
            margin: 20px;
            min-height: 200px;
            max-height: 400px;
            overflow-y: auto;
            word-wrap: break-word;
        }

        .email-actions {
            padding: 20px;
            border-top: 1px solid #f1f3f4;
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .email-btn {
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.2s ease;
        }

        .email-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

        .btn-copy {
            background: #28a745;
            color: white;
        }

        .btn-copy:hover {
            background: #218838;
        }

        .btn-clear {
            background: #6c757d;
            color: white;
        }

        .btn-clear:hover {
            background: #5a6268;
        }

        .btn-generate-all {
            background: #007bff;
            color: white;
        }

        .btn-generate-all:hover {
            background: #0056b3;
        }

        .btn-copy.copied {
            background: #20c997;
            color: white;
        }

        .po-selector-info {
            padding: 20px;
            color: #6c757d;
            font-style: italic;
            text-align: center;
        }

        /* Navigation Styles from Receiving Dashboard */
        .header {
            background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
            color: white;
            padding: 15px 0;
            margin-bottom: 30px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            z-index: 1000;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 15px;
        }

        .header h1 {
            margin: 0;
            font-size: 2.2rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 15px;
            flex-shrink: 0;
        }

        /* P.O.D. Button Styles */
        .pod-button {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 6px;
            text-decoration: none;
            font-size: 14px;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            white-space: nowrap;
        }

        .pod-button:hover {
            background: linear-gradient(135deg, #218838, #1ea583);
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
            color: white;
            text-decoration: none;
        }

        .pod-button .arrow {
            font-size: 12px;
            transition: transform 0.3s ease;
        }

        .pod-button:hover .arrow {
            transform: translateX(-2px);
        }

        .navigation-container {
            display: flex;
            gap: 10px;
            align-items: center;
            flex-wrap: wrap;
        }

        .nav-section {
            position: relative;
        }

        .nav-accordion-btn {
            background: #28a745;
            color: white;
            border: none;
            padding: 10px 16px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
            min-width: 120px;
            justify-content: space-between;
        }

        .nav-accordion-btn:hover {
            background: #218838;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .nav-accordion-content {
            position: absolute;
            top: 100%;
            left: 0;
            background: white;
            min-width: 220px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            border-radius: 6px;
            border: 1px solid #dee2e6;
            z-index: 1001;
            opacity: 0;
            visibility: hidden;
            transform: translateY(-10px);
            transition: all 0.3s ease;
            margin-top: 5px;
        }

        .nav-accordion-content.show {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }

        .nav-accordion-item {
            display: block;
            padding: 12px 16px;
            color: #495057;
            text-decoration: none;
            border-bottom: 1px solid #f1f3f4;
            transition: all 0.2s ease;
        }

        .nav-accordion-item:hover {
            background: #f8f9fa;
            color: #007bff;
            text-decoration: none;
            padding-left: 20px;
        }

        .nav-accordion-item:last-child {
            border-bottom: none;
        }

        .nav-accordion-item.active {
            background: #fff3cd;
            color: #856404;
            font-weight: 600;
        }

        .nav-accordion-divider {
            height: 1px;
            background: #dee2e6;
            margin: 4px 0;
        }

        .nav-imports-btn {
            background: #17a2b8;
            color: white;
            border: none;
            padding: 10px 16px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
            min-width: 120px;
            justify-content: space-between;
        }

        .nav-imports-btn:hover {
            background: #138496;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .nav-dropdown-content {
            position: absolute;
            top: 100%;
            left: 0;
            background: white;
            min-width: 220px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            border-radius: 6px;
            border: 1px solid #dee2e6;
            z-index: 1001;
            opacity: 0;
            visibility: hidden;
            transform: translateY(-10px);
            transition: all 0.3s ease;
            margin-top: 5px;
        }

        .nav-dropdown-content.show {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }

        .nav-dropdown-item {
            display: block;
            padding: 12px 16px;
            color: #495057;
            text-decoration: none;
            border-bottom: 1px solid #f1f3f4;
            transition: all 0.2s ease;
            background: none;
            border: none;
            width: 100%;
            text-align: left;
            cursor: pointer;
        }

        .nav-dropdown-item:hover {
            background: #f8f9fa;
            color: #007bff;
            text-decoration: none;
            padding-left: 20px;
        }

        .refresh-btn {
            background: #20c997;
            color: white;
            border: none;
            padding: 10px 16px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
        }

        .refresh-btn:hover {
            background: #1ea085;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .user-avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: #007bff;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 14px;
            flex-shrink: 0;
            position: relative;
        }

        .user-status-indicator {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: #28a745;
            position: absolute;
            bottom: -1px;
            right: -1px;
            border: 2px solid white;
        }

        .nav-accordion-divider {
            height: 1px;
            background: #f1f3f4;
            margin: 5px 0;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="header">
            <h1>
                <i class="fas fa-exclamation-triangle"></i>
                Enhanced Trouble Seed Dashboard
            </h1>
            
            <!-- P.O.D. Button -->
            <a href="/purchase-orders" class="pod-button">
                <span class="arrow">←</span>
                <span>P.O.D.</span>
            </a>
            
            <div class="d-flex align-items-center justify-content-between flex-grow-1">
                <%- include('partials/navigation', { currentPage: 'trouble-seed' }) %>
            </div>
        </div>
        
        <!-- Dashboard Description -->
        <div class="mb-4">
            <p class="mb-0">Track and manage problematic seeds with advanced filtering and vendor communication</p>
        </div>

    <div class="container-fluid">
        <!-- Statistics Section -->
        <div class="stats-grid">
            <div class="stat-card no-eta">
                <div class="stat-number"><%= stats.noEtaCount %></div>
                <div class="stat-label">No ETA Provided</div>
            </div>
            <div class="stat-card approaching-soon">
                <div class="stat-number"><%= stats.approachingSoonCount %></div>
                <div class="stat-label">ETA Within 7 Days</div>
            </div>
            <div class="stat-card approaching">
                <div class="stat-number"><%= stats.approachingCount %></div>
                <div class="stat-label">ETA 8-14 Days</div>
            </div>
            <div class="stat-card overdue">
                <div class="stat-number"><%= stats.overdueCount %></div>
                <div class="stat-label">Overdue Items</div>
            </div>
            <div class="stat-card needs-followup">
                <div class="stat-number"><%= stats.needsFollowupCount %></div>
                <div class="stat-label">Need Vendor Follow-up</div>
            </div>
            <div class="stat-card">
                <div class="stat-number"><%= stats.totalPOs %></div>
                <div class="stat-label">Affected POs</div>
            </div>
        </div>

        <!-- Filters Section -->
        <div class="filters-section">
            <h4><i class="fas fa-filter"></i> Filter Options</h4>
            
            <!-- Category Tabs -->
            <div class="category-tabs">
                <a href="?category=all&vendor=<%= currentFilters.vendor %>&sortBy=<%= currentFilters.sortBy %>" 
                   class="category-tab <%= currentFilters.category === 'all' ? 'active' : '' %>">
                    All Items
                    <span class="tab-badge <%= currentFilters.category === 'all' ? 'active' : '' %>"><%= stats.totalItems %></span>
                </a>
                <a href="?category=noEta&vendor=<%= currentFilters.vendor %>&sortBy=<%= currentFilters.sortBy %>" 
                   class="category-tab <%= currentFilters.category === 'noEta' ? 'active' : '' %>">
                    No ETA
                    <span class="tab-badge <%= currentFilters.category === 'noEta' ? 'active' : '' %>"><%= stats.noEtaCount %></span>
                </a>
                <a href="?category=approachingSoon&vendor=<%= currentFilters.vendor %>&sortBy=<%= currentFilters.sortBy %>" 
                   class="category-tab <%= currentFilters.category === 'approachingSoon' ? 'active' : '' %>">
                    Approaching Soon
                    <span class="tab-badge <%= currentFilters.category === 'approachingSoon' ? 'active' : '' %>"><%= stats.approachingSoonCount %></span>
                </a>
                <a href="?category=approaching&vendor=<%= currentFilters.vendor %>&sortBy=<%= currentFilters.sortBy %>" 
                   class="category-tab <%= currentFilters.category === 'approaching' ? 'active' : '' %>">
                    Approaching
                    <span class="tab-badge <%= currentFilters.category === 'approaching' ? 'active' : '' %>"><%= stats.approachingCount %></span>
                </a>
                <a href="?category=overdue&vendor=<%= currentFilters.vendor %>&sortBy=<%= currentFilters.sortBy %>" 
                   class="category-tab <%= currentFilters.category === 'overdue' ? 'active' : '' %>">
                    Overdue
                    <span class="tab-badge <%= currentFilters.category === 'overdue' ? 'active' : '' %>"><%= stats.overdueCount %></span>
                </a>
                <a href="?category=needsFollowup&vendor=<%= currentFilters.vendor %>&sortBy=<%= currentFilters.sortBy %>" 
                   class="category-tab <%= currentFilters.category === 'needsFollowup' ? 'active' : '' %>">
                    Needs Follow-up
                    <span class="tab-badge <%= currentFilters.category === 'needsFollowup' ? 'active' : '' %>"><%= stats.needsFollowupCount %></span>
                </a>
            </div>

            <!-- Additional Filters -->
            <div class="row">
                <div class="col-md-4">
                    <label class="form-label">Filter by Vendor:</label>
                    <select class="form-select" onchange="updateFilter('vendor', this.value)">
                        <option value="all" <%= currentFilters.vendor === 'all' ? 'selected' : '' %>>All Vendors</option>
                        <% uniqueVendors.forEach(vendor => { %>
                            <option value="<%= vendor %>" <%= currentFilters.vendor === vendor ? 'selected' : '' %>><%= vendor %></option>
                        <% }); %>
                    </select>
                </div>
                <div class="col-md-4">
                    <label class="form-label">Sort by:</label>
                    <select class="form-select" onchange="updateFilter('sortBy', this.value)">
                        <option value="poNumber" <%= currentFilters.sortBy === 'poNumber' ? 'selected' : '' %>>PO Number</option>
                        <option value="vendor" <%= currentFilters.sortBy === 'vendor' ? 'selected' : '' %>>Vendor</option>
                        <option value="eta" <%= currentFilters.sortBy === 'eta' ? 'selected' : '' %>>ETA Date</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <label class="form-label">&nbsp;</label>
                    <div>
                        <button class="btn btn-success" onclick="exportData()">
                            <i class="fas fa-download"></i> Export Data
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Email Generator Section -->
        <div class="email-generator">
            <div class="email-generator-header">
                <h4>
                    <i class="fas fa-envelope"></i>
                    Email Content Generator
                </h4>
            </div>
            <div class="email-content" id="emailContent">
                Select a PO below to generate email content for vendor communication...
            </div>
            <div class="email-actions">
                <button class="email-btn btn-copy" onclick="copyToClipboard()" id="copyBtn" disabled>
                    <i class="fas fa-copy"></i> Copy to Clipboard
                </button>
                <button class="email-btn btn-clear" onclick="clearEmailSelection()">
                    <i class="fas fa-undo"></i> Clear Selection
                </button>
                <button class="email-btn btn-generate-all" onclick="generateAllPOsEmail()">
                    <i class="fas fa-envelope-bulk"></i> Generate Summary for All POs
                </button>
            </div>
        </div>

        <!-- Results Section -->
        <% if (troubleByPO.length === 0) { %>
            <div class="empty-state">
                <i class="fas fa-seedling"></i>
                <h3>No Trouble Seeds Found</h3>
                <p>All items in this category are on track! 🎉</p>
            </div>
        <% } else { %>
            <% troubleByPO.forEach(po => { %>
                <div class="po-section">
                    <div class="po-header">
                        <div class="po-info">
                            <h3>
                                <% if (po.poUrl) { %>
                                    <a href="<%= po.poUrl %>" target="_blank" style="color: inherit; text-decoration: none;">
                                        PO #<%= po.poNumber %> <i class="fas fa-external-link-alt" style="font-size: 0.8rem;"></i>
                                    </a>
                                <% } else { %>
                                    PO #<%= po.poNumber %>
                                <% } %>
                            </h3>
                            <div class="vendor-info">
                                <strong><%= po.vendor %></strong>
                                <% if (po.vendorData && (po.vendorData.mainEmail || po.vendorData.mainPhone)) { %>
                                    <% if (po.vendorData.mainEmail) { %>
                                        <a href="mailto:<%= po.vendorData.mainEmail %>" class="vendor-contact-btn">
                                            <i class="fas fa-envelope"></i> Email
                                        </a>
                                    <% } %>
                                    <% if (po.vendorData.mainPhone) { %>
                                        <a href="tel:<%= po.vendorData.mainPhone %>" class="vendor-contact-btn">
                                            <i class="fas fa-phone"></i> Call
                                        </a>
                                    <% } %>
                                <% } %>
                                <% if (po.poDate) { %>
                                    <span class="text-muted">• PO Date: <%= new Date(po.poDate).toLocaleDateString() %></span>
                                <% } %>
                            </div>
                        </div>
                    </div>
                    
                    <div class="items-list">
                        <% po.items.forEach(item => { %>
                            <div class="item-row">
                                <div class="item-info">
                                    <div class="item-memo"><%= item.memo %></div>
                                    <div class="item-details">
                                        <% if (item.sku) { %>SKU: <%= item.sku %> • <% } %>
                                        Status: <%= item.itemStatus || 'Pending' %>
                                        <% if (item.notes) { %>• Notes: <%= item.notes %><% } %>
                                    </div>
                                </div>
                                
                                <div class="eta-info">
                                    <% if (item.eta) { %>
                                        <div class="eta-date">
                                            <%= new Date(item.eta).toLocaleDateString() %>
                                            <% if (item.daysFromToday !== null) { %>
                                                <% const days = Math.round(item.daysFromToday); %>
                                                <% if (days < 0) { %>
                                                    (<%= Math.abs(days) %> days overdue)
                                                <% } else if (days === 0) { %>
                                                    (Today!)
                                                <% } else { %>
                                                    (<%= days %> days)
                                                <% } %>
                                            <% } %>
                                        </div>
                                    <% } else { %>
                                        <div class="eta-date text-muted">No ETA</div>
                                    <% } %>
                                    <div class="eta-status <%= item.etaStatus %>">
                                        <% if (item.etaStatus === 'no-eta') { %>No ETA
                                        <% } else if (item.etaStatus === 'approaching-soon') { %>Soon
                                        <% } else if (item.etaStatus === 'approaching') { %>Approaching
                                        <% } else if (item.etaStatus === 'overdue') { %>Overdue
                                        <% } else { %>Future
                                        <% } %>
                                    </div>
                                </div>
                                
                                <div class="item-actions">
                                    <button class="action-btn btn-update-eta" onclick="updateETA('<%= item._id %>')">
                                        <i class="fas fa-calendar-alt"></i> Update ETA
                                    </button>
                                    <% if (po.vendorData && (po.vendorData.mainEmail || po.vendorData.mainPhone)) { %>
                                        <button class="action-btn btn-contact-vendor" onclick="contactVendor('<%= po.vendor %>', '<%= item.memo %>')">
                                            <i class="fas fa-phone"></i> Contact
                                        </button>
                                    <% } %>
                                    <button class="action-btn btn-mark-received" onclick="markReceived('<%= item._id %>')">
                                        <i class="fas fa-check"></i> Received
                                    </button>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            <% }); %>
        <% } %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function updateFilter(filterType, value) {
            const params = new URLSearchParams(window.location.search);
            params.set(filterType, value);
            window.location.href = '?' + params.toString();
        }

        function updateETA(itemId) {
            const newETA = prompt('Enter new ETA (YYYY-MM-DD format):');
            if (newETA) {
                fetch(`/purchase-orders/line-items/${itemId}/eta`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ eta: newETA })
                }).then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Failed to update ETA');
                    }
                }).catch(error => {
                    console.error('Error:', error);
                    alert('Failed to update ETA');
                });
            }
        }

        function contactVendor(vendor, item) {
            const message = `Inquiry about ${item} - Please provide updated ETA`;
            alert(`Contact feature will be implemented to reach out to ${vendor} about: ${item}`);
        }

        function markReceived(itemId) {
            if (confirm('Mark this item as received?')) {
                fetch(`/purchase-orders/line-items/${itemId}/receive`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ received: true, receivedDate: new Date() })
                }).then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Failed to mark item as received');
                    }
                }).catch(error => {
                    console.error('Error:', error);
                    alert('Failed to mark item as received');
                });
            }
        }

        function exportData() {
            alert('Export functionality will be implemented');
        }
        
        // Navigation JavaScript Functions
        function toggleAccordion(accordionId) {
            const accordion = document.getElementById(accordionId);
            const button = accordion.previousElementSibling;
            const icon = button.querySelector('.accordion-icon');
            
            if (accordion.style.display === 'block') {
                accordion.style.display = 'none';
                icon.textContent = '▼';
            } else {
                // Close all other accordions
                document.querySelectorAll('.nav-accordion-content').forEach(acc => {
                    acc.style.display = 'none';
                    const btn = acc.previousElementSibling;
                    if (btn) {
                        const icn = btn.querySelector('.accordion-icon');
                        if (icn) icn.textContent = '▼';
                    }
                });
                
                accordion.style.display = 'block';
                icon.textContent = '▲';
            }
        }

        function toggleImportsDropdown() {
            const dropdown = document.getElementById('importsDropdown');
            const icon = document.querySelector('.nav-imports-btn .dropdown-icon');
            
            if (dropdown.style.display === 'block') {
                dropdown.style.display = 'none';
                icon.textContent = '▼';
            } else {
                dropdown.style.display = 'block';
                icon.textContent = '▲';
            }
        }

        function openNetSuiteImportModal() {
            // Placeholder for NetSuite import functionality
            alert('NetSuite PO Form import functionality would be implemented here');
        }

        // Close dropdowns when clicking outside
        document.addEventListener('click', function(event) {
            if (!event.target.closest('.nav-section')) {
                document.querySelectorAll('.nav-accordion-content, .nav-dropdown-content').forEach(dropdown => {
                    dropdown.style.display = 'none';
                });
                document.querySelectorAll('.accordion-icon, .dropdown-icon').forEach(icon => {
                    icon.textContent = '▼';
                });
            }
        });

        function closeAllDropdowns() {
            document.querySelectorAll('.nav-accordion-content, .nav-dropdown-content').forEach(dropdown => {
                dropdown.style.display = 'none';
            });
            document.querySelectorAll('.accordion-icon, .dropdown-icon').forEach(icon => {
                icon.textContent = '▼';
            });
        }

        // Email Generator Functions
        let selectedPOForEmail = null;
        const troubleData = <%- JSON.stringify(troubleByPO) %>;

        function selectPOForEmail(poNumber, element) {
            console.log('selectPOForEmail called with:', poNumber);
            selectedPOForEmail = troubleData.find(po => po.poNumber === poNumber);
            console.log('Found selectedPOForEmail:', selectedPOForEmail);

            if (!selectedPOForEmail) {
                console.log('No PO found for:', poNumber);
                return;
            }

            // Update UI - highlight selected PO
            document.querySelectorAll('.po-section').forEach(section => {
                section.style.border = '';
                section.style.boxShadow = '';
            });
            element.style.border = '2px solid #007bff';
            element.style.boxShadow = '0 4px 12px rgba(0, 123, 255, 0.15)';

            // Generate email content
            generateEmailContent(selectedPOForEmail);

            // Enable copy button
            document.getElementById('copyBtn').disabled = false;
        }

        function generateEmailContent(po) {
            // Count different types of items
            const noEtaItems = po.items.filter(item => item.etaStatus === 'no-eta');
            const overdueItems = po.items.filter(item => item.etaStatus === 'overdue');
            const needsFollowupItems = po.items.filter(item => item.etaStatus === 'needs-followup');

            const emailContent = `Subject: UPDATE NEEDED - Purchase Order ${po.poNumber} - Outstanding Items

Dear ${po.vendor},

I hope this email finds you well. I am writing to request an update on Purchase Order ${po.poNumber}, which currently shows as "Partially Received" in our system.

We have identified several items that require immediate attention:

${noEtaItems.length > 0 ? `DELIVERY DELAYS (No ETA Provided):
${noEtaItems.map(item => `• ${item.memo}${item.sku ? ` (SKU: ${item.sku})` : ''}`).join('\n')}

We urgently need estimated delivery dates for these items to update our customers and plan accordingly.

` : ''}${overdueItems.length > 0 ? `OVERDUE ITEMS:
${overdueItems.map(item => `• ${item.memo}${item.sku ? ` (SKU: ${item.sku})` : ''} - Expected: ${item.eta ? new Date(item.eta).toLocaleDateString() : 'N/A'}`).join('\n')}

These items are past their expected delivery dates. Please provide immediate updates.

` : ''}${needsFollowupItems.length > 0 ? `ITEMS REQUIRING FOLLOW-UP:
${needsFollowupItems.map(item => `• ${item.memo}${item.sku ? ` (SKU: ${item.sku})` : ''}`).join('\n')}

These items need your immediate attention and response.

` : ''}Could you please provide:
1. Updated delivery dates for delayed items
2. Status updates for overdue items
3. Alternative products for any discontinued items
4. Any other issues preventing completion of this order

This information is critical for our operations and customer commitments. Please respond within 24-48 hours.

Thank you for your prompt attention to this matter.

Best regards,
[Your Name]
[Your Title]
[Your Contact Information]

---
Purchase Order: ${po.poNumber}
Total Outstanding Items: ${po.items.length}
Generated: ${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`;

            document.getElementById('emailContent').textContent = emailContent;
        }

        function generateAllPOsEmail() {
            if (troubleData.length === 0) {
                alert('No POs with trouble items found!');
                return;
            }

            const totalNoEtaItems = troubleData.reduce((sum, po) => 
                sum + po.items.filter(item => item.etaStatus === 'no-eta').length, 0);
            const totalOverdueItems = troubleData.reduce((sum, po) => 
                sum + po.items.filter(item => item.etaStatus === 'overdue').length, 0);
            const totalNeedsFollowupItems = troubleData.reduce((sum, po) => 
                sum + po.items.filter(item => item.etaStatus === 'needs-followup').length, 0);

            const emailContent = `Subject: URGENT - Multiple Purchase Orders Requiring Updates

Dear Team,

We have identified ${troubleData.length} Purchase Orders with outstanding issues requiring immediate vendor communication:

SUMMARY:
• Total POs requiring updates: ${troubleData.length}
• Items with no ETA: ${totalNoEtaItems}
• Overdue items: ${totalOverdueItems}
• Items needing follow-up: ${totalNeedsFollowupItems}

PURCHASE ORDERS REQUIRING ACTION:

${troubleData.map(po => {
    const noEta = po.items.filter(item => item.etaStatus === 'no-eta').length;
    const overdue = po.items.filter(item => item.etaStatus === 'overdue').length;
    const followup = po.items.filter(item => item.etaStatus === 'needs-followup').length;
    
    return `PO ${po.poNumber} - ${po.vendor}
• No ETA items: ${noEta}
• Overdue items: ${overdue}
• Needs follow-up: ${followup}
• Total issues: ${po.items.length}`;
}).join('\n\n')}

RECOMMENDED ACTIONS:
1. Contact each vendor immediately for updates
2. Request ETAs for all delayed items
3. Obtain status updates for overdue items
4. Update customers on any potential delays

Please use the individual PO email templates to contact each vendor separately.

Generated: ${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`;

            document.getElementById('emailContent').textContent = emailContent;
            document.getElementById('copyBtn').disabled = false;
        }

        function copyToClipboard() {
            const emailContent = document.getElementById('emailContent').textContent;
            navigator.clipboard.writeText(emailContent).then(() => {
                const btn = document.getElementById('copyBtn');
                const originalHTML = btn.innerHTML;
                btn.innerHTML = '<i class="fas fa-check"></i> Copied!';
                btn.classList.add('copied');
                setTimeout(() => {
                    btn.innerHTML = originalHTML;
                    btn.classList.remove('copied');
                }, 2000);
            }).catch(err => {
                console.error('Failed to copy: ', err);
                alert('Failed to copy to clipboard. Please select and copy manually.');
            });
        }

        function clearEmailSelection() {
            selectedPOForEmail = null;
            document.querySelectorAll('.po-section').forEach(section => {
                section.style.border = '';
                section.style.boxShadow = '';
            });
            document.getElementById('emailContent').textContent = 'Select a PO below to generate email content for vendor communication...';
            document.getElementById('copyBtn').disabled = true;
        }

        // Make PO sections clickable for email generation
        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('.po-section').forEach(section => {
                const poNumber = section.querySelector('h3').textContent.match(/PO #(\w+)/);
                if (poNumber) {
                    section.style.cursor = 'pointer';
                    section.title = 'Click to generate email for this PO';
                    section.addEventListener('click', (e) => {
                        // Don't trigger if clicking on buttons or links
                        if (e.target.tagName !== 'BUTTON' && e.target.tagName !== 'A' && !e.target.closest('button') && !e.target.closest('a')) {
                            selectPOForEmail(poNumber[1], section);
                        }
                    });
                }
            });
        });
    </script>
</body>
</html>
