<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Organic Vendors Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }

        .container-fluid {
            max-width: 1400px;
            margin: 0 auto;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            position: sticky;
            top: 0;
            background: white;
            z-index: 1000;
            padding: 15px 0;
            border-bottom: 1px solid #dee2e6;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        /* Enhanced Navigation Styles */
        .navigation-container {
            display: flex;
            gap: 15px;
            align-items: flex-start;
        }

        .nav-section {
            position: relative;
        }

        /* Accordion Styles */
        .nav-accordion-btn {
            background: #28a745;
            color: white;
            border: none;
            padding: 10px 16px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
            min-width: 120px;
            justify-content: space-between;
        }

        .nav-accordion-btn:hover {
            background: #218838;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .nav-accordion-content {
            position: absolute;
            top: 100%;
            left: 0;
            background: white;
            min-width: 220px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            border-radius: 6px;
            border: 1px solid #dee2e6;
            z-index: 1001;
            opacity: 0;
            visibility: hidden;
            transform: translateY(-10px);
            transition: all 0.3s ease;
            margin-top: 5px;
        }

        .nav-accordion-content.show {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }

        .nav-accordion-item {
            display: block;
            padding: 12px 16px;
            color: #495057;
            text-decoration: none;
            border-bottom: 1px solid #f1f3f4;
            transition: all 0.2s ease;
            font-size: 14px;
        }

        .nav-accordion-item:last-child {
            border-bottom: none;
            border-radius: 0 0 6px 6px;
        }

        .nav-accordion-item:first-child {
            border-radius: 6px 6px 0 0;
        }

        .nav-accordion-item:hover {
            background: #f8f9fa;
            color: #28a745;
            text-decoration: none;
            padding-left: 20px;
        }

        /* Options Button Styles */
        .nav-options-btn {
            background: #6c757d;
            color: white;
            border: none;
            padding: 10px 16px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
            min-width: 100px;
            justify-content: space-between;
        }

        .nav-options-btn:hover {
            background: #5a6268;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        /* Imports Button Styles */
        .nav-imports-btn {
            background: #007bff;
            color: white;
            border: none;
            padding: 10px 16px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
            min-width: 100px;
            justify-content: space-between;
        }

        .nav-imports-btn:hover {
            background: #0056b3;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        /* Dropdown Styles */
        .nav-dropdown-content {
            position: absolute;
            top: 100%;
            left: 0;
            background: white;
            min-width: 200px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            border-radius: 6px;
            border: 1px solid #dee2e6;
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transform: translateY(-10px);
            transition: all 0.3s ease;
            margin-top: 5px;
        }

        .nav-dropdown-content.show {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }

        .nav-dropdown-item {
            display: block;
            padding: 12px 16px;
            color: #495057;
            text-decoration: none;
            border-bottom: 1px solid #f1f3f4;
            transition: all 0.2s ease;
            font-size: 14px;
            background: none;
            border-left: none;
            border-right: none;
            border-top: none;
            width: 100%;
            text-align: left;
            cursor: pointer;
        }

        .nav-dropdown-item:last-child {
            border-bottom: none;
            border-radius: 0 0 6px 6px;
        }

        .nav-dropdown-item:first-child {
            border-radius: 6px 6px 0 0;
        }

        .nav-dropdown-item:hover {
            background: #f8f9fa;
            color: #007bff;
            text-decoration: none;
            padding-left: 20px;
        }

        /* Icon animations */
        .accordion-icon,
        .dropdown-icon {
            transition: transform 0.3s ease;
            font-size: 12px;
        }

        .accordion-icon.rotated,
        .dropdown-icon.rotated {
            transform: rotate(180deg);
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .navigation-container {
                flex-direction: column;
                gap: 10px;
                width: 100%;
            }

            .nav-section {
                width: 100%;
            }

            .nav-accordion-btn,
            .nav-options-btn,
            .nav-imports-btn {
                width: 100%;
                justify-content: space-between;
            }

            .nav-accordion-content,
            .nav-dropdown-content {
                position: static;
                min-width: 100%;
                margin-top: 0;
                box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
            }
        }

        .vendor-card {
            border: 1px solid #ddd;
            border-radius: 8px;
            margin-bottom: 15px;
            transition: all 0.3s ease;
        }

        .vendor-card:hover {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .certification-status {
            font-weight: bold;
            padding: 3px 8px;
            border-radius: 4px;
        }

        .status-current {
            background-color: #d4edda;
            color: #155724;
        }

        .status-expiring {
            background-color: #fff3cd;
            color: #856404;
        }

        .status-expired {
            background-color: #f8d7da;
            color: #721c24;
        }

        .status-unknown {
            background-color: #e2e3e5;
            color: #383d41;
        }

        .vendor-status {
            padding: 2px 6px;
            border-radius: 3px;
            font-size: 0.85em;
        }

        .status-active {
            background-color: #d4edda;
            color: #155724;
        }

        .status-inactive {
            background-color: #f8d7da;
            color: #721c24;
        }

        .status-pending {
            background-color: #fff3cd;
            color: #856404;
        }

        .document-viewer {
            display: none;
            margin-top: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            overflow: hidden;
        }

        .document-viewer iframe {
            width: 100%;
            height: 400px;
            border: none;
        }

        .organic-link {
            color: #28a745;
            text-decoration: none;
        }

        .organic-link:hover {
            text-decoration: underline;
        }

        .stats-card {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
            border-radius: 10px;
        }

        .filter-section {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .organic-seeds-list {
            max-height: 150px;
            overflow-y: auto;
        }

        .seed-item {
            background-color: #e8f5e8;
            padding: 4px 8px;
            margin: 2px;
            border-radius: 3px;
            display: inline-block;
            font-size: 0.85em;
        }

        .parsed-seeds-content {
            max-height: 400px;
            overflow-y: auto;
        }

        .seed-product {
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 10px;
            padding: 10px;
            background-color: #f9f9f9;
        }

        .seed-product-header {
            font-weight: bold;
            color: #2d5a2d;
            margin-bottom: 5px;
        }

        .seed-product-details {
            font-size: 0.9em;
            color: #666;
        }

        .seed-certificate {
            background-color: #e8f5e8;
            padding: 3px 6px;
            border-radius: 3px;
            font-size: 0.85em;
            display: inline-block;
            margin: 2px;
        }
    </style>
</head>

<body>
    <div class="container-fluid">
        <div class="header">
            <h1>Organic Vendors Dashboard</h1>
            <div class="navigation-container">
                <!-- Managers Accordion -->
                <div class="nav-section">
                    <button class="nav-accordion-btn" onclick="toggleAccordion('managersAccordion')">
                        📊 Managers <span class="accordion-icon">▼</span>
                    </button>
                    <div id="managersAccordion" class="nav-accordion-content">
                        <a href="/purchase-orders" class="nav-accordion-item">📋 Purchase Orders Dashboard</a>
                        <a href="/purchase-orders/trouble-seed" class="nav-accordion-item">⚠️ Trouble Seed</a>
                        <a href="/purchase-orders/line-items-manager" class="nav-accordion-item">📦 Line Items
                            Manager</a>
                        <a href="/purchase-orders/tracking-dashboard" class="nav-accordion-item">🚚 17Track
                            Dashboard</a>
                        <a href="/purchase-orders/orphaned-line-items" class="nav-accordion-item">🧹 Orphaned Items</a>
                        <a href="/purchase-orders/notes-manager" class="nav-accordion-item">📝 Notes Manager</a>
                        <a href="/organic-vendors" class="nav-accordion-item">🌱 Organic Vendors</a>
                    </div>
                </div>

                <!-- Combined Options Button -->
                <div class="nav-section">
                    <button class="nav-options-btn" onclick="toggleOptionsDropdown()">
                        ⚙️ Options <span class="dropdown-icon">▼</span>
                    </button>
                    <div id="optionsDropdown" class="nav-dropdown-content">
                        <button class="nav-dropdown-item" onclick="openStatusModal()">
                            🏷️ Manage PO Status Options
                        </button>
                        <button class="nav-dropdown-item" onclick="openLineItemStatusModal()">
                            📋 Manage Line Item Status Options
                        </button>
                        <button class="nav-dropdown-item" onclick="openCarrierModal()">
                            🚚 Manage Carriers
                        </button>
                    </div>
                </div>

                <!-- Imports Section -->
                <div class="nav-section">
                    <button class="nav-imports-btn" onclick="toggleImportsDropdown()">
                        📁 Import <span class="dropdown-icon">▼</span>
                    </button>
                    <div id="importsDropdown" class="nav-dropdown-content">
                        <a href="/upload" class="nav-dropdown-item">📄 Purchase Orders CSV</a>
                        <a href="/upload-line-items" class="nav-dropdown-item">📦 Line Items CSV</a>
                    </div>
                </div>

                <!-- Dropship Module -->
                <div class="nav-section">
                    <a href="/dropship" class="nav-accordion-btn" style="text-decoration: none;">
                        🚚 Dropship Processor
                    </a>
                </div>
            </div>
        </div>

        <div class="mt-4">
            <!-- Header -->
            <div class="row mb-4">
                <div class="col-12">
                    <h1 class="display-4">
                        <i class="fas fa-leaf text-success"></i>
                        Organic Vendors Dashboard
                    </h1>
                    <p class="lead text-muted">Manage organic vendor certifications and compliance</p>
                </div>
            </div>

            <!-- Statistics Cards -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card stats-card">
                        <div class="card-body text-center">
                            <h3>
                                <%= stats.total %>
                            </h3>
                            <p class="mb-0">Total Vendors</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-success text-white">
                        <div class="card-body text-center">
                            <h3>
                                <%= stats.active %>
                            </h3>
                            <p class="mb-0">Active Vendors</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-warning text-dark">
                        <div class="card-body text-center">
                            <h3>
                                <%= stats.expiringSoon %>
                            </h3>
                            <p class="mb-0">Expiring Soon</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-danger text-white">
                        <div class="card-body text-center">
                            <h3>
                                <%= stats.expired %>
                            </h3>
                            <p class="mb-0">Expired Certs</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Filters and Controls -->
            <div class="filter-section">
                <!-- Quick Filter Buttons -->
                <div class="row mb-3">
                    <div class="col-12">
                        <div class="d-flex gap-2 align-items-center flex-wrap">
                            <span class="fw-bold text-muted">Quick Filters:</span>
                            <button type="button" id="expiringSoonToggle" 
                                    class="btn <%= currentFilters.certificationStatus === 'Expiring Soon' ? 'btn-warning' : 'btn-outline-warning' %> btn-sm"
                                    onclick="toggleExpiringSoonFilter()">
                                <i class="fas fa-clock"></i> 
                                Expiring Soon (<%= stats.expiringSoon %>)
                            </button>
                            <button type="button" id="expiredToggle" 
                                    class="btn <%= currentFilters.certificationStatus === 'Expired' ? 'btn-danger' : 'btn-outline-danger' %> btn-sm"
                                    onclick="toggleExpiredFilter()">
                                <i class="fas fa-exclamation-triangle"></i> 
                                Expired (<%= stats.expired %>)
                            </button>
                            <button type="button" id="currentToggle" 
                                    class="btn <%= currentFilters.certificationStatus === 'Current' ? 'btn-success' : 'btn-outline-success' %> btn-sm"
                                    onclick="toggleCurrentFilter()">
                                <i class="fas fa-check-circle"></i> 
                                Current (<%= stats.current %>)
                            </button>
                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="clearAllFilters()">
                                <i class="fas fa-times"></i> Clear Filters
                            </button>
                        </div>
                    </div>
                </div>
                
                <!-- Advanced Filters -->
                <div class="row align-items-center">
                    <div class="col-md-2">
                        <label class="form-label">Status:</label>
                        <select id="statusFilter" class="form-select">
                            <option value="all" <%=currentFilters.status==='all' ? 'selected' : '' %>>All Statuses</option>
                            <% uniqueStatuses.forEach(status=> { %>
                                <option value="<%= status %>" <%=currentFilters.status===status ? 'selected' : '' %>><%=status %></option>
                            <% }); %>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Country:</label>
                        <select id="countryFilter" class="form-select">
                            <option value="all" <%=currentFilters.country==='all' ? 'selected' : '' %>>All Countries</option>
                            <% uniqueCountries.forEach(country=> { %>
                                <option value="<%= country %>" <%=currentFilters.country===country ? 'selected' : '' %>><%=country %></option>
                            <% }); %>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Sort by:</label>
                        <select id="sortBy" class="form-select">
                            <option value="vendorName" <%=currentFilters.sortBy==='vendorName' ? 'selected' : '' %>>Vendor Name</option>
                            <option value="lastOrganicCertificationDate" <%=currentFilters.sortBy==='lastOrganicCertificationDate' ? 'selected' : '' %>>Certification Date</option>
                            <option value="internalId" <%=currentFilters.sortBy==='internalId' ? 'selected' : '' %>>Internal ID</option>
                            <option value="status" <%=currentFilters.sortBy==='status' ? 'selected' : '' %>>Status</option>
                            <option value="address.country" <%=currentFilters.sortBy==='address.country' ? 'selected' : '' %>>Country</option>
                        </select>
                    </div>
                    <div class="col-md-1">
                        <label class="form-label">Order:</label>
                        <select id="sortOrder" class="form-select">
                            <option value="asc" <%=currentFilters.sortOrder==='asc' ? 'selected' : '' %>>Asc</option>
                            <option value="desc" <%=currentFilters.sortOrder==='desc' ? 'selected' : '' %>>Desc</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Search:</label>
                        <input type="text" id="searchInput" class="form-control" placeholder="Search vendors...">
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Settings:</label>
                        <div class="d-flex gap-1">
                            <button type="button" class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#settingsModal">
                                <i class="fas fa-cog"></i>
                            </button>
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addVendorModal" onclick="resetFormForAdd()">
                                <i class="fas fa-plus"></i> Add
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Vendors List -->
            <div id="vendorsList" class="row">
                <% vendors.forEach(vendor=> { %>
                    <div class="col-12 mb-3">
                        <div class="card vendor-card">
                            <div class="card-body">
                                <div class="row align-items-center">
                                    <!-- Basic Info -->
                                    <div class="col-md-2">
                                        <h5 class="card-title mb-1">
                                            <%= vendor.vendorName %>
                                        </h5>
                                        <small class="text-muted">ID: <%= vendor.internalId %></small>
                                        <br>
                                        <% if (vendor.address && vendor.address.country) { %>
                                            <small class="text-primary"><i class="fas fa-globe"></i> <%= vendor.address.country %></small>
                                            <br>
                                        <% } %>
                                        <span class="vendor-status status-<%= vendor.status.toLowerCase().replace(' ', '-') %>">
                                            <%= vendor.status %>
                                        </span>
                                    </div>

                                    <!-- Certification Info -->
                                    <div class="col-md-2">
                                        <strong>Last Cert Date:</strong><br>
                                        <%= new Date(vendor.lastOrganicCertificationDate).toLocaleDateString() %><br>
                                            <small class="text-muted">
                                                <%= vendor.daysSinceLastCertification %> days ago
                                            </small><br>
                                            <span
                                                class="certification-status status-<%= vendor.certificationStatus.toLowerCase().replace(' ', '-') %>">
                                                <%= vendor.certificationStatus %>
                                            </span>
                                    </div>

                                    <!-- TSC Info -->
                                    <div class="col-md-2">
                                        <strong>TSC Item:</strong><br>
                                        <%= vendor.tscItem || 'N/A' %><br>
                                            <small class="text-muted">
                                                <%= vendor.tscDescription ? vendor.tscDescription.substring(0, 50) +
                                                    (vendor.tscDescription.length> 50 ? '...' : '') : 'No description'
                                                    %>
                                            </small>
                                    </div>

                                    <!-- Organic Seeds -->
                                    <div class="col-md-2">
                                        <strong>Organic Seeds:</strong><br>
                                        <div class="organic-seeds-list">
                                            <% if (vendor.organicSeedsRawData && vendor.organicSeedsRawData.trim()) { %>
                                                <button type="button" class="btn btn-sm btn-outline-success"
                                                    onclick="toggleOrganicSeeds('<%= vendor._id %>')">
                                                    <i class="fas fa-seedling"></i> View Seeds Data
                                                </button>
                                                <% } else if (vendor.organicSeeds && vendor.organicSeeds.length> 0) { %>
                                                    <% vendor.organicSeeds.forEach(seed=> { %>
                                                        <span class="seed-item">
                                                            <%= seed.name %>
                                                        </span>
                                                        <% }); %>
                                                            <% } else { %>
                                                                <span class="text-muted">No seeds listed</span>
                                                                <% } %>
                                        </div>
                                    </div>

                                    <!-- Documents and Links -->
                                    <div class="col-md-2">
                                        <div class="btn-group-vertical w-100" role="group">
                                            <% if (vendor.certificate) { %>
                                                <button type="button" class="btn btn-sm btn-outline-primary mb-1"
                                                    onclick="toggleDocument('<%= vendor._id %>', 'certificate')">
                                                    <i class="fas fa-certificate"></i> Certificate
                                                </button>
                                                <% } %>
                                                    <% if (vendor.operationsProfile) { %>
                                                        <button type="button" class="btn btn-sm btn-outline-info mb-1"
                                                            onclick="toggleDocument('<%= vendor._id %>', 'operations-profile')">
                                                            <i class="fas fa-file-alt"></i> Operations
                                                        </button>
                                                        <% } %>
                                                            <% if (vendor.organicDatabaseUrl) { %>
                                                                <a href="<%= vendor.organicDatabaseUrl %>"
                                                                    target="_blank"
                                                                    class="btn btn-sm btn-outline-success organic-link">
                                                                    <i class="fas fa-external-link-alt"></i> Organic DB
                                                                </a>
                                                                <% if (vendor.organicDatabaseId) { %>
                                                                    <button type="button"
                                                                        class="btn btn-sm btn-outline-warning mb-1"
                                                                        onclick="fetchUSDADocuments('<%= vendor._id %>', '<%= vendor.vendorName %>')">
                                                                        <i class="fas fa-download"></i> Sync USDA
                                                                    </button>
                                                                    <% } %>
                                                                        <% } else { %>
                                                                            <a href="https://organic.ams.usda.gov/integrity/CertificationSearch.aspx"
                                                                                target="_blank"
                                                                                class="btn btn-sm btn-outline-secondary">
                                                                                <i class="fas fa-search"></i> Find in DB
                                                                            </a>
                                                                            <% } %>
                                        </div>
                                    </div>

                                    <!-- Actions -->
                                    <div class="col-md-2">
                                        <div class="btn-group w-100" role="group">
                                            <button type="button" class="btn btn-sm btn-outline-primary"
                                                onclick="editVendor('<%= vendor._id %>')">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button type="button" class="btn btn-sm btn-outline-danger"
                                                onclick="deleteVendor('<%= vendor._id %>', '<%= vendor.vendorName %>')">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>

                                <!-- Document Viewer (Hidden by default) -->
                                <div id="docViewer-<%= vendor._id %>" class="document-viewer">
                                    <iframe id="docFrame-<%= vendor._id %>"></iframe>
                                </div>

                                <!-- Organic Seeds Viewer (Hidden by default) -->
                                <div id="seedsViewer-<%= vendor._id %>" class="document-viewer" style="display: none;">
                                    <div class="p-3">
                                        <h6><i class="fas fa-seedling text-success"></i> Organic Seeds Data</h6>
                                        <div id="seedsContent-<%= vendor._id %>" class="parsed-seeds-content">
                                            <!-- Parsed seeds data will be displayed here -->
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <% }); %>
            </div>
        </div>

        <!-- Add/Edit Vendor Modal -->
        <div class="modal fade" id="addVendorModal" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Add New Organic Vendor</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <form id="vendorForm" enctype="multipart/form-data">
                        <!-- Hidden field to store vendor ID for file management -->
                        <input type="hidden" name="vendorId" id="vendorIdField">
                        
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Vendor Name *</label>
                                        <input type="text" class="form-control" name="vendorName" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Internal ID *</label>
                                        <input type="text" class="form-control" name="internalId" required>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Last Organic Certification Date *</label>
                                        <input type="date" class="form-control" name="lastOrganicCertificationDate"
                                            required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Status</label>
                                        <select class="form-select" name="status">
                                            <option value="Active">Active</option>
                                            <option value="Inactive">Inactive</option>
                                            <option value="Pending Review">Pending Review</option>
                                            <option value="Certification Expired">Certification Expired</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">TSC Item</label>
                                        <input type="text" class="form-control" name="tscItem">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">TSC Description</label>
                                        <textarea class="form-control" name="tscDescription" rows="2"></textarea>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Organic Database ID</label>
                                        <input type="text" class="form-control" name="organicDatabaseId">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Organic Database URL</label>
                                        <input type="url" class="form-control" name="organicDatabaseUrl">
                                    </div>
                                </div>
                            </div>

                            <!-- Contact and Address Information -->
                            <hr>
                            <h6 class="mb-3">Contact & Address Information</h6>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Contact Person</label>
                                        <input type="text" class="form-control" name="contactPerson">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Email</label>
                                        <input type="email" class="form-control" name="email">
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Phone</label>
                                        <input type="tel" class="form-control" name="phone">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Country</label>
                                        <select class="form-select" name="country">
                                            <option value="">Select Country...</option>
                                            <option value="United States">United States</option>
                                            <option value="Canada">Canada</option>
                                            <option value="Mexico">Mexico</option>
                                            <option value="United Kingdom">United Kingdom</option>
                                            <option value="Germany">Germany</option>
                                            <option value="France">France</option>
                                            <option value="Italy">Italy</option>
                                            <option value="Spain">Spain</option>
                                            <option value="Netherlands">Netherlands</option>
                                            <option value="Australia">Australia</option>
                                            <option value="New Zealand">New Zealand</option>
                                            <option value="Japan">Japan</option>
                                            <option value="South Korea">South Korea</option>
                                            <option value="China">China</option>
                                            <option value="India">India</option>
                                            <option value="Brazil">Brazil</option>
                                            <option value="Argentina">Argentina</option>
                                            <option value="Chile">Chile</option>
                                            <option value="Other">Other</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Street Address</label>
                                        <input type="text" class="form-control" name="street">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">City</label>
                                        <input type="text" class="form-control" name="city">
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">State/Province</label>
                                        <input type="text" class="form-control" name="state">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">ZIP/Postal Code</label>
                                        <input type="text" class="form-control" name="zipCode">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Expiring Soon Threshold (days)</label>
                                        <input type="number" class="form-control" name="expiringSoonThreshold" 
                                               min="1" max="365" placeholder="35">
                                        <small class="form-text text-muted">Leave blank to use global default</small>
                                    </div>
                                </div>
                            </div>
                            <hr>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">
                                            <i class="fas fa-certificate text-primary"></i> Certificate Management
                                        </label>
                                        
                                        <!-- Existing Certificate Display -->
                                        <div id="existingCertificate" class="border rounded p-2 mb-2 bg-light" style="display: none;">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <div>
                                                    <small class="text-muted">Current Certificate:</small><br>
                                                    <span id="currentCertName" class="fw-bold"></span><br>
                                                    <small id="currentCertDate" class="text-muted"></small>
                                                </div>
                                                <div>
                                                    <button type="button" class="btn btn-sm btn-outline-primary" onclick="viewCurrentCert()">
                                                        <i class="fas fa-eye"></i> View
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-outline-warning" onclick="archiveCert()">
                                                        <i class="fas fa-archive"></i> Archive
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Upload New Certificate -->
                                        <input type="file" class="form-control" name="certificate" id="certificateInput"
                                            accept=".pdf,.doc,.docx,.jpg,.jpeg,.png" onchange="showCertificateUploadInfo()">
                                        <div class="mt-1">
                                            <small class="text-muted">
                                                <i class="fas fa-info-circle"></i> 
                                                <span id="certUploadInfo">Upload a new certificate (will replace current)</span>
                                            </small>
                                        </div>
                                        
                                        <!-- Version/Notes for new upload -->
                                        <div id="certVersionInput" style="display: none;" class="mt-2">
                                            <input type="text" class="form-control form-control-sm mb-1" name="certificateVersion" 
                                                placeholder="Version (e.g., 2024, Renewal, Amendment)">
                                            <input type="text" class="form-control form-control-sm" name="certificateNotes" 
                                                placeholder="Notes (optional)">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">
                                            <i class="fas fa-file-alt text-info"></i> Operations Profile Management
                                        </label>
                                        
                                        <!-- Existing Operations Profile Display -->
                                        <div id="existingProfile" class="border rounded p-2 mb-2 bg-light" style="display: none;">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <div>
                                                    <small class="text-muted">Current Profile:</small><br>
                                                    <span id="currentProfileName" class="fw-bold"></span><br>
                                                    <small id="currentProfileDate" class="text-muted"></small>
                                                </div>
                                                <div>
                                                    <button type="button" class="btn btn-sm btn-outline-primary" onclick="viewCurrentProfile()">
                                                        <i class="fas fa-eye"></i> View
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-outline-warning" onclick="archiveProfile()">
                                                        <i class="fas fa-archive"></i> Archive
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Upload New Operations Profile -->
                                        <input type="file" class="form-control" name="operationsProfile" id="profileInput"
                                            accept=".pdf,.doc,.docx,.jpg,.jpeg,.png" onchange="showProfileUploadInfo()">
                                        <div class="mt-1">
                                            <small class="text-muted">
                                                <i class="fas fa-info-circle"></i> 
                                                <span id="profileUploadInfo">Upload a new operations profile (will replace current)</span>
                                            </small>
                                        </div>
                                        
                                        <!-- Version/Notes for new upload -->
                                        <div id="profileVersionInput" style="display: none;" class="mt-2">
                                            <input type="text" class="form-control form-control-sm mb-1" name="profileVersion" 
                                                placeholder="Version (e.g., 2024, Updated, Corrected)">
                                            <input type="text" class="form-control form-control-sm" name="profileNotes" 
                                                placeholder="Notes (optional)">
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- USDA Integration Section -->
                            <div class="row">
                                <div class="col-12">
                                    <h6 class="text-muted mb-3 mt-3">
                                        <i class="fas fa-database"></i> USDA Database Integration
                                    </h6>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-12">
                                    <div class="mb-3">
                                        <label class="form-label">Manual USDA Link</label>
                                        <input type="url" class="form-control" name="manualUSDALink"
                                            placeholder="Paste link from https://organic.ams.usda.gov/integrity/Home search results">
                                        <div class="form-text">
                                            Search for vendor at <a href="https://organic.ams.usda.gov/integrity/Home"
                                                target="_blank">USDA Organic Database</a> and paste the direct link here
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-12">
                                    <div class="mb-3">
                                        <label class="form-label">Organic Seeds Data (Raw)</label>
                                        <textarea class="form-control" name="organicSeedsRawData" rows="8" placeholder="Paste organic seeds data from USDA database here...

Example format:
HANDLING
No. 1 | Category: Other
#Importing, handling, repackaging, and distribution of seed - Organic:
Certificate No.: 4583
--	--	--	
Certified
12/22/2011

HANDLING
No. 2 | Category: Other
* Basil (Purple Dark Opal)
Certificate No.: 4583
--	Yes	--	
Certified
12/22/2011"></textarea>
                                        <div class="form-text">
                                            Copy and paste the organic seeds data directly from the USDA database page.
                                            This
                                            will be parsed and used for TSC references.
                                            <button type="button" class="btn btn-sm btn-outline-info ms-2"
                                                onclick="parseOrganicSeedsData()">
                                                <i class="fas fa-magic"></i> Parse Data
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Parsed Results Preview -->
                            <div class="row" id="parsedResultsSection" style="display: none;">
                                <div class="col-12">
                                    <div class="mb-3">
                                        <label class="form-label">Parsed Organic Products</label>
                                        <div id="parsedResults" class="border rounded p-3 bg-light">
                                            <!-- Parsed results will appear here -->
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Notes</label>
                                <textarea class="form-control" name="notes" rows="3"></textarea>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Save Vendor</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Settings Modal -->
        <div class="modal fade" id="settingsModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Global Settings</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="settingsForm">
                            <div class="mb-3">
                                <label class="form-label">Default "Expiring Soon" Threshold (days before expiration):</label>
                                <input type="number" class="form-control" id="defaultExpiringSoonThreshold" 
                                       value="<%= defaultExpiringSoonThreshold %>" min="1" max="365">
                                <small class="form-text text-muted">
                                    Certifications will be marked as "Expiring Soon" when they are within this many days of expiring (365 days from certification date).
                                </small>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Quick Stats:</label>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <h6 class="card-title">Total Vendors</h6>
                                                <h4 class="text-primary"><%= stats.total %></h4>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <h6 class="card-title">Active Vendors</h6>
                                                <h4 class="text-success"><%= stats.active %></h4>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" onclick="saveSettings()">Save Settings</button>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
        <script>
            // Filter toggle functions
            function toggleExpiringSoonFilter() {
                const currentStatus = '<%= currentFilters.certificationStatus %>';
                const newStatus = currentStatus === 'Expiring Soon' ? 'all' : 'Expiring Soon';
                updateUrlParam('certificationStatus', newStatus);
            }

            function toggleExpiredFilter() {
                const currentStatus = '<%= currentFilters.certificationStatus %>';
                const newStatus = currentStatus === 'Expired' ? 'all' : 'Expired';
                updateUrlParam('certificationStatus', newStatus);
            }

            function toggleCurrentFilter() {
                const currentStatus = '<%= currentFilters.certificationStatus %>';
                const newStatus = currentStatus === 'Current' ? 'all' : 'Current';
                updateUrlParam('certificationStatus', newStatus);
            }

            function clearAllFilters() {
                const url = new URL(window.location);
                url.searchParams.delete('status');
                url.searchParams.delete('certificationStatus');
                url.searchParams.delete('country');
                url.searchParams.delete('sortBy');
                url.searchParams.delete('sortOrder');
                window.location.href = url.toString();
            }

            function updateUrlParam(param, value) {
                const url = new URL(window.location);
                if (value === 'all' || value === '') {
                    url.searchParams.delete(param);
                } else {
                    url.searchParams.set(param, value);
                }
                window.location.href = url.toString();
            }

            function saveSettings() {
                const threshold = document.getElementById('defaultExpiringSoonThreshold').value;
                const url = new URL(window.location);
                url.searchParams.set('defaultExpiringSoonThreshold', threshold);
                window.location.href = url.toString();
            }

            // Update filter dropdowns to use URL params
            document.getElementById('statusFilter').addEventListener('change', function() {
                updateUrlParam('status', this.value);
            });

            document.getElementById('countryFilter').addEventListener('change', function() {
                updateUrlParam('country', this.value);
            });

            document.getElementById('sortBy').addEventListener('change', function() {
                updateUrlParam('sortBy', this.value);
            });

            document.getElementById('sortOrder').addEventListener('change', function() {
                updateUrlParam('sortOrder', this.value);
            });

            // Navigation Functions
            function toggleAccordion() {
                const content = document.getElementById('managersAccordion');
                const icon = document.querySelector('.accordion-icon');

                content.classList.toggle('show');
                icon.classList.toggle('rotated');
            }

            function toggleOptionsDropdown() {
                const content = document.getElementById('optionsDropdown');
                const icon = document.querySelector('.nav-options-btn .dropdown-icon');

                content.classList.toggle('show');
                icon.classList.toggle('rotated');

                // Close other dropdowns
                document.getElementById('importsDropdown').classList.remove('show');
                document.querySelector('.nav-imports-btn .dropdown-icon').classList.remove('rotated');
            }

            function toggleImportsDropdown() {
                const content = document.getElementById('importsDropdown');
                const icon = document.querySelector('.nav-imports-btn .dropdown-icon');

                content.classList.toggle('show');
                icon.classList.toggle('rotated');

                // Close other dropdowns
                document.getElementById('optionsDropdown').classList.remove('show');
                document.querySelector('.nav-options-btn .dropdown-icon').classList.remove('rotated');
            }

            // Close dropdowns when clicking outside
            document.addEventListener('click', function (event) {
                const managersSection = document.querySelector('.nav-section:first-child');
                const optionsSection = document.querySelector('.nav-section:nth-child(2)');
                const importsSection = document.querySelector('.nav-section:nth-child(3)');

                if (!managersSection.contains(event.target)) {
                    document.getElementById('managersAccordion').classList.remove('show');
                    document.querySelector('.accordion-icon').classList.remove('rotated');
                }

                if (!optionsSection.contains(event.target)) {
                    document.getElementById('optionsDropdown').classList.remove('show');
                    document.querySelector('.nav-options-btn .dropdown-icon').classList.remove('rotated');
                }

                if (!importsSection.contains(event.target)) {
                    document.getElementById('importsDropdown').classList.remove('show');
                    document.querySelector('.nav-imports-btn .dropdown-icon').classList.remove('rotated');
                }
            });

            // Toggle document viewer
            function toggleDocument(vendorId, docType) {
                const viewer = document.getElementById(`docViewer-${vendorId}`);
                const frame = document.getElementById(`docFrame-${vendorId}`);

                if (viewer.style.display === 'none' || !viewer.style.display) {
                    frame.src = `/organic-vendors/${vendorId}/${docType}`;
                    viewer.style.display = 'block';
                } else {
                    viewer.style.display = 'none';
                    frame.src = '';
                }
            }

            // Toggle organic seeds viewer with optimized data loading
            async function toggleOrganicSeeds(vendorId) {
                const viewer = document.getElementById(`seedsViewer-${vendorId}`);
                const content = document.getElementById(`seedsContent-${vendorId}`);

                if (viewer.style.display === 'none' || !viewer.style.display) {
                    // Show viewer and load data using optimized endpoint
                    content.innerHTML = '<div class="text-center"><i class="fas fa-spinner fa-spin"></i> Loading seeds data...</div>';
                    viewer.style.display = 'block';

                    try {
                        const response = await fetch(`/organic-vendors/${vendorId}/seeds-data`);
                        const seedsData = await response.json();

                        if (seedsData && seedsData.organicSeedsRawData) {
                            const products = parseUSDAOrganicData(seedsData.organicSeedsRawData);
                            displaySeedsData(content, products);
                        } else if (seedsData && seedsData.organicSeeds && seedsData.organicSeeds.length > 0) {
                            // Display structured seeds data if available
                            let html = '<div class="structured-seeds-data">';
                            seedsData.organicSeeds.forEach((seed, index) => {
                                html += `
                                <div class="seed-product">
                                    <div class="seed-product-header">
                                        <i class="fas fa-seedling"></i> ${seed.name || `Seed ${index + 1}`}
                                    </div>
                                    <div class="seed-product-details">
                                        ${seed.variety ? `<div><strong>Variety:</strong> ${seed.variety}</div>` : ''}
                                        ${seed.certificationStatus ? `<span class="seed-certificate">${seed.certificationStatus}</span>` : ''}
                                        ${seed.notes ? `<div class="text-muted">${seed.notes}</div>` : ''}
                                    </div>
                                </div>
                            `;
                            });
                            html += '</div>';
                            content.innerHTML = html;
                        } else {
                            content.innerHTML = '<p class="text-muted">No organic seeds data available</p>';
                        }
                    } catch (error) {
                        content.innerHTML = '<p class="text-danger">Error loading seeds data</p>';
                        console.error('Seeds data loading error:', error);
                    }
                } else {
                    viewer.style.display = 'none';
                }
            }

            // Display parsed seeds data in a nice format
            function displaySeedsData(container, products) {
                let html = '';

                if (products.length === 0) {
                    html = '<p class="text-muted">No parsed products found</p>';
                } else {
                    products.forEach((product, index) => {
                        html += `
                        <div class="seed-product">
                            <div class="seed-product-header">
                                <i class="fas fa-seedling"></i> Product ${product.number || index + 1}
                            </div>
                            <div class="seed-product-details">
                                ${product.description ? `<div><strong>Description:</strong> ${product.description}</div>` : ''}
                                ${product.category ? `<div><strong>Category:</strong> ${product.category}</div>` : ''}
                                ${product.certificateNumber ? `<span class="seed-certificate">Certificate: ${product.certificateNumber}</span>` : ''}
                                ${product.status ? `<span class="seed-certificate">${product.status}</span>` : ''}
                                ${product.dateAdded ? `<span class="seed-certificate">Date: ${product.dateAdded}</span>` : ''}
                            </div>
                        </div>
                    `;
                    });
                }

                container.innerHTML = html;
            }

            // Filter and search functionality
            document.getElementById('statusFilter').addEventListener('change', applyFilters);
            document.getElementById('sortBy').addEventListener('change', applyFilters);
            document.getElementById('sortOrder').addEventListener('change', applyFilters);

            let searchTimeout;
            document.getElementById('searchInput').addEventListener('input', function () {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(applyFilters, 500);
            });

            function applyFilters() {
                const params = new URLSearchParams();
                params.set('status', document.getElementById('statusFilter').value);
                params.set('sortBy', document.getElementById('sortBy').value);
                params.set('sortOrder', document.getElementById('sortOrder').value);

                const search = document.getElementById('searchInput').value;
                if (search) params.set('search', search);

                window.location.search = params.toString();
            }

            // Reset form for adding new vendor
            function resetFormForAdd() {
                const form = document.getElementById('vendorForm');
                form.reset();
                form.removeAttribute('data-edit-id');
                document.querySelector('#addVendorModal .modal-title').textContent = 'Add New Organic Vendor';
                
                // Reset file management displays
                document.getElementById('vendorIdField').value = '';
                document.getElementById('existingCertificate').style.display = 'none';
                document.getElementById('existingProfile').style.display = 'none';
                document.getElementById('certVersionInput').style.display = 'none';
                document.getElementById('profileVersionInput').style.display = 'none';
                document.getElementById('certUploadInfo').textContent = 'Upload a certificate file';
                document.getElementById('profileUploadInfo').textContent = 'Upload an operations profile file';
            }

            // Form submission
            document.getElementById('vendorForm').addEventListener('submit', async function (e) {
                e.preventDefault();

                const formData = new FormData(this);
                const editId = this.getAttribute('data-edit-id');

                try {
                    let response;
                    if (editId) {
                        // Update existing vendor
                        response = await fetch(`/organic-vendors/${editId}`, {
                            method: 'PUT',
                            body: formData
                        });
                    } else {
                        // Create new vendor
                        response = await fetch('/organic-vendors', {
                            method: 'POST',
                            body: formData
                        });
                    }

                    const result = await response.json();

                    if (result.success) {
                        // Reset form for next use
                        this.reset();
                        this.removeAttribute('data-edit-id');
                        document.querySelector('#addVendorModal .modal-title').textContent = 'Add New Organic Vendor';

                        // Close modal and reload page
                        bootstrap.Modal.getInstance(document.getElementById('addVendorModal')).hide();
                        location.reload();
                    } else {
                        alert('Error: ' + result.error);
                    }
                } catch (error) {
                    alert('Error saving vendor: ' + error.message);
                }
            });

            // Edit vendor function
            async function editVendor(vendorId) {
                try {
                    // Fetch vendor data
                    const response = await fetch(`/organic-vendors/${vendorId}/edit`);
                    const vendor = await response.json();

                    if (!vendor || vendor.error) {
                        alert('Error loading vendor data: ' + (vendor?.error || 'Unknown error'));
                        return;
                    }

                    // Update modal title
                    document.querySelector('#addVendorModal .modal-title').textContent = 'Edit Organic Vendor';

                    // Fill form with vendor data
                    const form = document.getElementById('vendorForm');
                    form.querySelector('[name="vendorName"]').value = vendor.vendorName || '';
                    form.querySelector('[name="internalId"]').value = vendor.internalId || '';
                    form.querySelector('[name="lastOrganicCertificationDate"]').value = vendor.lastOrganicCertificationDate ? vendor.lastOrganicCertificationDate.split('T')[0] : '';
                    form.querySelector('[name="tscItem"]').value = vendor.tscItem || '';
                    form.querySelector('[name="tscDescription"]').value = vendor.tscDescription || '';
                    form.querySelector('[name="organicDatabaseId"]').value = vendor.organicDatabaseId || '';
                    form.querySelector('[name="organicDatabaseUrl"]').value = vendor.organicDatabaseUrl || '';

                    // Handle multiple manualUSDALink fields (use the first one)
                    const usdaLinkField = form.querySelector('[name="manualUSDALink"]');
                    if (usdaLinkField) {
                        usdaLinkField.value = vendor.manualUSDALink || '';
                    }

                    form.querySelector('[name="organicSeedsRawData"]').value = vendor.organicSeedsRawData || '';
                    form.querySelector('[name="status"]').value = vendor.status || 'Active';
                    form.querySelector('[name="notes"]').value = vendor.notes || '';
                    
                    // Populate contact and address fields
                    form.querySelector('[name="contactPerson"]').value = vendor.contactPerson || '';
                    form.querySelector('[name="email"]').value = vendor.email || '';
                    form.querySelector('[name="phone"]').value = vendor.phone || '';
                    form.querySelector('[name="expiringSoonThreshold"]').value = vendor.expiringSoonThreshold || '';
                    
                    // Populate address fields
                    if (vendor.address) {
                        form.querySelector('[name="street"]').value = vendor.address.street || '';
                        form.querySelector('[name="city"]').value = vendor.address.city || '';
                        form.querySelector('[name="state"]').value = vendor.address.state || '';
                        form.querySelector('[name="zipCode"]').value = vendor.address.zipCode || '';
                        form.querySelector('[name="country"]').value = vendor.address.country || '';
                    }

                    // Set form to edit mode
                    form.setAttribute('data-edit-id', vendorId);
                    
                    // Set vendor ID in hidden field for file management
                    document.getElementById('vendorIdField').value = vendorId;

                    // Populate file management displays
                    populateEditForm(vendor);

                    // Show modal
                    const modal = new bootstrap.Modal(document.getElementById('addVendorModal'));
                    modal.show();

                } catch (error) {
                    alert('Error loading vendor for edit: ' + error.message);
                }
            }

            // Delete vendor function
            async function deleteVendor(vendorId, vendorName) {
                console.log(`🗑️ Delete function called for: ${vendorName} (ID: ${vendorId})`);

                if (confirm(`Are you sure you want to delete vendor "${vendorName}"?`)) {
                    try {
                        console.log(`🗑️ User confirmed deletion, sending DELETE request...`);

                        const response = await fetch(`/organic-vendors/${vendorId}`, {
                            method: 'DELETE'
                        });

                        console.log(`🗑️ Response status: ${response.status}`);

                        const result = await response.json();
                        console.log(`🗑️ Response result:`, result);

                        if (result.success) {
                            console.log(`✅ Delete successful, reloading page...`);
                            location.reload();
                        } else {
                            console.error(`❌ Delete failed:`, result.error);
                            alert('Error: ' + result.error);
                        }
                    } catch (error) {
                        console.error(`❌ Delete error:`, error);
                        alert('Error deleting vendor: ' + error.message);
                    }
                } else {
                    console.log(`🗑️ User cancelled deletion`);
                }
            }

            // Fetch USDA documents for a vendor
            async function fetchUSDADocuments(vendorId, vendorName) {
                const button = event.target.closest('button');
                const originalText = button.innerHTML;

                try {
                    // Show loading state
                    button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Syncing...';
                    button.disabled = true;

                    const response = await fetch(`/organic-vendors/${vendorId}/fetch-usda-documents`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    const result = await response.json();

                    if (result.success) {
                        alert(`✅ Success: ${result.message}`);
                        // Reload the page to show updated documents
                        location.reload();
                    } else {
                        alert(`⚠️ ${result.message}`);
                    }

                } catch (error) {
                    alert('❌ Error fetching USDA documents: ' + error.message);
                } finally {
                    // Restore button state
                    button.innerHTML = originalText;
                    button.disabled = false;
                }
            }

            // Parse organic seeds data from USDA format
            function parseOrganicSeedsData() {
                const textarea = document.querySelector('textarea[name="organicSeedsRawData"]');
                const rawData = textarea.value.trim();

                if (!rawData) {
                    alert('Please paste organic seeds data first');
                    return;
                }

                try {
                    const products = parseUSDAOrganicData(rawData);
                    displayParsedResults(products);

                    // Generate TSC description from parsed data
                    generateTSCDescription(products);

                } catch (error) {
                    alert('Error parsing data: ' + error.message);
                }
            }

            // Parser for USDA organic data format
            function parseUSDAOrganicData(rawData) {
                const products = [];
                const sections = rawData.split(/HANDLING\s*\n/);

                sections.forEach((section, index) => {
                    if (index === 0 && !section.includes('No.')) return; // Skip empty first section

                    const lines = section.split('\n').map(line => line.trim()).filter(line => line);
                    if (lines.length === 0) return;

                    const product = {
                        number: '',
                        category: '',
                        description: '',
                        certificateNumber: '',
                        status: '',
                        dateAdded: ''
                    };

                    // Parse number and category from first line
                    const firstLine = lines[0];
                    const numberMatch = firstLine.match(/No\.\s*(\d+)/);
                    const categoryMatch = firstLine.match(/Category:\s*(.+)/);

                    if (numberMatch) product.number = numberMatch[1];
                    if (categoryMatch) product.category = categoryMatch[1];

                    // Parse description (lines starting with # or *)
                    lines.forEach(line => {
                        if (line.startsWith('#') || line.startsWith('*')) {
                            product.description = line.substring(1).trim();
                        }

                        // Parse certificate number
                        const certMatch = line.match(/Certificate No\.\:\s*(\d+)/);
                        if (certMatch) product.certificateNumber = certMatch[1];

                        // Parse status and date (usually in last lines)
                        if (line.includes('Certified') || line.includes('Suspended') || line.includes('Surrendered')) {
                            product.status = line;
                        }

                        // Parse date
                        const dateMatch = line.match(/(\d{1,2}\/\d{1,2}\/\d{4})/);
                        if (dateMatch) product.dateAdded = dateMatch[1];
                    });

                    if (product.number || product.description) {
                        products.push(product);
                    }
                });

                return products;
            }

            // Display parsed results
            function displayParsedResults(products) {
                const resultsDiv = document.getElementById('parsedResults');
                const sectionDiv = document.getElementById('parsedResultsSection');

                let html = '<h6>Parsed Products:</h6>';

                products.forEach((product, index) => {
                    html += `
                    <div class="border rounded p-2 mb-2 bg-white">
                        <strong>Product ${product.number || index + 1}:</strong> ${product.description || 'No description'}<br>
                        <small class="text-muted">
                            Category: ${product.category} | 
                            Certificate: ${product.certificateNumber} | 
                            Status: ${product.status} | 
                            Date: ${product.dateAdded}
                        </small>
                    </div>
                `;
                });

                resultsDiv.innerHTML = html;
                sectionDiv.style.display = 'block';
            }

            // Generate TSC description from parsed products
            function generateTSCDescription(products) {
                const categories = [...new Set(products.map(p => p.category).filter(c => c))];
                const descriptions = products.map(p => p.description).filter(d => d);

                let tscDescription = '';

                if (categories.length > 0) {
                    tscDescription += `Categories: ${categories.join(', ')}. `;
                }

                if (descriptions.length > 0) {
                    tscDescription += `Products: ${descriptions.slice(0, 3).join('; ')}`;
                    if (descriptions.length > 3) {
                        tscDescription += ` and ${descriptions.length - 3} more`;
                    }
                }

                // Update TSC description field
                const tscField = document.querySelector('textarea[name="tscDescription"]');
                if (tscField && tscDescription) {
                    tscField.value = tscDescription;
                }
            }

            // File Management Functions
            function showCertificateUploadInfo() {
                const input = document.getElementById('certificateInput');
                const info = document.getElementById('certUploadInfo');
                const versionInput = document.getElementById('certVersionInput');
                
                if (input.files.length > 0) {
                    const file = input.files[0];
                    info.innerHTML = `📁 Selected: <strong>${file.name}</strong> (${(file.size / 1024 / 1024).toFixed(2)} MB)`;
                    versionInput.style.display = 'block';
                } else {
                    info.textContent = 'Upload a new certificate (will replace current)';
                    versionInput.style.display = 'none';
                }
            }

            function showProfileUploadInfo() {
                const input = document.getElementById('profileInput');
                const info = document.getElementById('profileUploadInfo');
                const versionInput = document.getElementById('profileVersionInput');
                
                if (input.files.length > 0) {
                    const file = input.files[0];
                    info.innerHTML = `📁 Selected: <strong>${file.name}</strong> (${(file.size / 1024 / 1024).toFixed(2)} MB)`;
                    versionInput.style.display = 'block';
                } else {
                    info.textContent = 'Upload a new operations profile (will replace current)';
                    versionInput.style.display = 'none';
                }
            }

            function viewCurrentCert() {
                const vendorId = document.querySelector('input[name="vendorId"]')?.value;
                if (vendorId) {
                    toggleDocument(vendorId, 'certificate');
                }
            }

            function viewCurrentProfile() {
                const vendorId = document.querySelector('input[name="vendorId"]')?.value;
                if (vendorId) {
                    toggleDocument(vendorId, 'operations-profile');
                }
            }

            function archiveCert() {
                if (confirm('Archive the current certificate? It will be moved to archive but not deleted.')) {
                    // TODO: Implement archive functionality
                    alert('Archive functionality will be implemented in the next update.');
                }
            }

            function archiveProfile() {
                if (confirm('Archive the current operations profile? It will be moved to archive but not deleted.')) {
                    // TODO: Implement archive functionality
                    alert('Archive functionality will be implemented in the next update.');
                }
            }

            // Update edit form to show existing files
            function populateEditForm(vendor) {
                // ... existing form population code ...
                
                // Show existing certificate info
                if (vendor.certificate && vendor.certificate.filename) {
                    document.getElementById('existingCertificate').style.display = 'block';
                    document.getElementById('currentCertName').textContent = vendor.certificate.filename;
                    const certDate = new Date(vendor.certificate.uploadDate).toLocaleDateString();
                    document.getElementById('currentCertDate').textContent = `Uploaded: ${certDate}`;
                } else {
                    document.getElementById('existingCertificate').style.display = 'none';
                }

                // Show existing operations profile info
                if (vendor.operationsProfile && vendor.operationsProfile.filename) {
                    document.getElementById('existingProfile').style.display = 'block';
                    document.getElementById('currentProfileName').textContent = vendor.operationsProfile.filename;
                    const profileDate = new Date(vendor.operationsProfile.uploadDate).toLocaleDateString();
                    document.getElementById('currentProfileDate').textContent = `Uploaded: ${profileDate}`;
                } else {
                    document.getElementById('existingProfile').style.display = 'none';
                }
            }
        </script>
</body>

</html>